{"version":3,"sources":["pages/about/AboutPage.jsx","pages/home/HomePage.jsx","pages/gear/GearPage.jsx","pages/weapon/WeaponPage.jsx","pages/spells/SpellContainer.jsx","pages/spells/HealingView.jsx","pages/spells/HealingContainer.jsx","pages/spells/talents.js","pages/spells/spells.js","pages/spells/HealingTouch.jsx","pages/spells/Rejuvenation.jsx","pages/spells/Regrowth.jsx","pages/spells/Lifebloom.jsx","pages/spells/GreaterHeal.jsx","pages/spells/FlashHeal.jsx","pages/spells/Renew.jsx","pages/spells/FlashOfLight.jsx","pages/spells/HolyLight.jsx","pages/spells/HolyNova.jsx","pages/spells/Heal.jsx","pages/spells/PrayerOfHealing.jsx","pages/spells/LesserHealingWave.jsx","pages/spells/HealingWave.jsx","pages/spells/ChainHeal.jsx","pages/not-found/NotFoundPage.jsx","pages/resistances/ResistancesView.jsx","pages/resistances/ResistancesContainer.jsx","pages/armor/ArmorView.jsx","pages/armor/ArmorContainer.jsx","pages/regen/RegenView.jsx","pages/regen/RegenContainer.jsx","pages/attackTable/AttackTableView.jsx","pages/attackTable/AttackTableContainer.jsx","pages/defenseTable/defenseTableView.jsx","pages/defenseTable/DefenseTableContainer.jsx","routes.js","registerServiceWorker.js","index.js"],"names":["About","className","aria-label","NavLink","to","href","Component","HomePage","GearPage","state","tab","_handleTabClick","bind","_getItems","this","props","initialize","strength","agility","intellect","spirit","stamina","meleeHit","meleeCrit","attackPower","spellHit","spellCrit","healing","spellDamage","mp5","armor","dodge","defense","event","setState","Object","assign","target","innerText","slot","formValues","patch","classType","class","slotItems","_","filter","items","item","type","slotItemValues","map","score","Math","round","orderBy","toLowerCase","handleTabClick","tabs","selectedTab","columns","_getColumns","defaultProps","reduxForm","form","connect","getFormValues","dispatch","actions","bindActionCreators","weaponProficiencies","WeaponPage","indexOf","SpellContainer","role","exact","healingView","healingTable","children","spell","talents","name","description","aspect","data","margin","top","right","left","bottom","direct","dataKey","stackId","stroke","fill","isAnimationActive","hot","yAxisId","orientation","strokeDasharray","talent","key","Field","field","id","component","htmlFor","data-tooltip","aria-haspopup","title","width","rank","mana","castTime","base","bonus","bonusHot","crit","total","hotTick","hps","efficiency","HealingContainer","character","modifiedSpell","modifiedRank","modifiedCharacter","modifiedTarget","forOwn","value","effect","lowLevelPenalty","min","level","coefficient","directCoefficient","bonusDirect","hotCoefficient","bonusHotCo","duration","totalCrit","max","numberOfTicks","modifiedNumberOfTicks","totalBaseHot","totalBonusHot","totalHot","baseAverage","bonusHeal","averageCritBonus","totalAverage","manaEfficiency","healingPerSecond","console","log","manaPerSecond","rating","rankDescription","toFixed","ranks","computeSpellDetails","applyTalents","HealingView","spellName","generateHealingTable","amplifyMagic","lifebloomStacks","lifebloomHoT","improvedRegrowth","naturalPerfection","giftOfNature","naturesGrace","moonglow","tranquilSpirit","improvedRejuvenation","empoweredRejuvenation","improvedHealingTouch","empoweredTouch","t2Druid8set","t2Druid5set","t3Druid4set","t3Druid8set","treeOfLifeForm","treeOfLifeAura","idolOfHealth","idolOfTheEmeraldQueen","idolOfLongevity","healingLight","illumination","blessingOfLight","holyLightCoefficients","mentalAgility","improvedRenew","divineFury","improvedHealing","spiritualHealing","improvedPrayerOfHealing","t2Priest8set","improvedHealingWave","tidalFocus","healingWay","purification","regrowth","healingTouch","rejuvenation","lifebloom","flashHeal","flashOfLight","holyLight","renew","greaterHeal","heal","holyNova","prayerOfHealing","healingWave","lesserHealingWave","chainHeal","spells","int","talentsH","NotFoundPage","resistancesView","resistancesTable","resistances","dot","damageReduction","effectiveHealth","valueOfTenHealth","valueofOneResist","ResistancesContainer","health","resistance","reduction","push","baseHealth","effectiveHealthWithOneMoreResistance","ResistancesView","computeResistanceTable","computeResistance","armorView","armorTable","ArmorContainer","attackerLevel","targetLevel","computeDamageReduction","ArmorView","computeArmorTable","computeArmor","regenerationView","regen","outOfCombat","inCombat","innervate","RegenContainer","combatManaRegen","formula","undefined","sqrt","RegenView","computeRegen","COLORS","AttackTableView","attackTables","height","nameKey","auto","pieChart","outerRadius","entry","index","length","special","dual","missChance","overHitCap","dodgeChance","parryChance","blockChance","glancingChance","glancingPenalty","critChance","overCritCap","overCri","hitChance","overall","AttackTableContainer","skill","hit","hasParry","hasBlock","number","attackType","baseWeaponSkill","bossParryBonus","lowend","highend","remaining","miss","normalize","parry","block","glancing","computeAttackTable","computeChances","computeAttackTables","DefenseTableView","defenseTables","crushingChance","DefenseTableContainer","plusBlock","plusDodge","plusParry","playerLevel","mobLevel","mobSkill","baseDefenseSkill","skillDifference","baseSkillDifference","crushing","computeDefenseTable","computeDefenseTables","Routes","HashRouter","debug","Switch","Route","path","HealingTouch","Rejuvenation","Regrowth","Lifebloom","GreaterHeal","FlashHeal","Renew","FlashOfLight","HolyLight","Heal","HolyNova","PrayerOfHealing","LesserHealingWave","HealingWave","ChainHeal","AboutPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1fae9a2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='row columns'>\r\n          <nav aria-label='You are here:'>\r\n            <ul className='breadcrumbs'>\r\n              <li><NavLink to=\"/\">Home</NavLink></li>\r\n              <li><span className='show-for-sr'>Current:</span> About</li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className='row'>\r\n          <h3>About Legacy Sim</h3>\r\n        </div>\r\n        <div className='row columns'>\r\n          <p>\r\n            Legacy Sim is a theorycrafting combat simulation tool for vanilla WoW.\r\n          </p>\r\n          <p>\r\n            <a href='https://github.com/zak-lambert/tbc-sim'>Github</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='row columns'>\r\n          <h3>Legacy Sim</h3>\r\n        </div>\r\n        <div className='row columns'>\r\n          <ul>\r\n            {/* <li><NavLink to=\"/home\">Home</NavLink></li> */}\r\n            <li><NavLink to=\"/spell\">Spells</NavLink></li>\r\n            {/* <li><NavLink to=\"/armor\">Armor</NavLink></li> */}\r\n            {/* <li><NavLink to=\"/resistances\">Resistances</NavLink></li> */}\r\n            <li><NavLink to=\"/regen\">Mana Regeneration</NavLink></li>\r\n            {/* <li><NavLink to=\"/gear\">Gear</NavLink></li>\r\n            <li><NavLink to=\"/weapon\">Weapons</NavLink></li>\r\n            <li><NavLink to=\"/attack\">Attack Table</NavLink></li>\r\n            <li><NavLink to=\"/defense\">Defense Table</NavLink></li> */}\r\n            <li><NavLink to=\"/about\">About</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport GearView from './GearView';\nimport items from '../../assets/data/items';\n\nclass GearPage extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      tab: 'Head',\n    };\n    this._handleTabClick = this._handleTabClick.bind(this);\n    this._getItems = this._getItems.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.initialize({\n      strength: 0,\n      agility: 0,\n      intellect: 0,\n      spirit: 0,\n      stamina: 0,\n      meleeHit: 0,\n      meleeCrit: 0,\n      attackPower: 0,\n      spellHit: 0,\n      spellCrit: 0,\n      healing: 0,\n      spellDamage: 0,\n      mp5: 0,\n      armor: 0,\n      dodge: 0,\n      defense: 0\n    });\n  }\n\n  _handleTabClick(event) {\n    this.setState(Object.assign({}, this.state, {\n      tab: event.target.innerText,\n    }));\n  }\n\n  _getItems(slot) {\n    const formValues = this.props.formValues || {};\n    const patch = +formValues.patch || 12;\n    const classType = formValues.class;\n    const slotItems = _.filter(items, (item) => {\n      if (classType && item[classType] === 0) {\n        return false;\n      }\n      if (\n        ((classType === 'shaman' || classType === 'hunter') && item.type === 'plate')\n        || ((classType === 'rogue' || classType === 'druid') && (item.type === 'plate' || item.type === 'mail'))\n        || ((classType === 'priest' || classType === 'mage' || classType === 'warlock') && (item.type === 'plate' || item.type === 'mail' || item.type === 'leather'))\n      ) {\n        return false;\n      }\n      return item.slot === slot && item.patch <= patch;\n    });\n    const slotItemValues = _.map(slotItems, (item) => {\n      const score = Math.round(\n        (item.strength || 0) * +formValues.strength\n        + (item.agility || 0) * +formValues.agility\n        + (item.intellect || 0) * +formValues.intellect\n        + (item.spirit || 0) * +formValues.spirit\n        + (item.stamina || 0) * +formValues.stamina\n        + (item.meleeHit || 0) * +formValues.meleeHit\n        + (item.meleeCrit || 0) * +formValues.meleeCrit\n        + (item.attackPower || 0) * +formValues.attackPower\n        + (item.spellHit || 0) * +formValues.spellHit\n        + (item.spellCrit || 0) * +formValues.spellCrit\n        + (item.healing || 0) * +formValues.healing\n        + (item.spellDamage || 0) * +formValues.spellDamage\n        + (item.mp5 || 0) * +formValues.mp5\n        + (item.armor || 0) * +formValues.armor\n        + (item.defense || 0) * +formValues.defense\n        + (item.dodge || 0) * +formValues.dodge\n      );\n      return Object.assign({}, item, { score });\n    })\n    return _.orderBy(slotItemValues, ['score', 'itemLevel'], ['desc', 'desc']);\n  }\n\n  _getColumns(slot) {\n    const formValues = this.props.formValues || {};\n    return {\n      strength: formValues.strength > 0,\n      agility: formValues.agility > 0,\n      intellect: formValues.intellect > 0,\n      spirit: formValues.spirit > 0,\n      stamina: formValues.stamina > 0,\n      meleeHit: formValues.meleeHit > 0,\n      meleeCrit: formValues.meleeCrit > 0,\n      attackPower: formValues.attackPower > 0,\n      spellHit: formValues.spellHit > 0,\n      spellCrit: formValues.spellCrit > 0,\n      healing: formValues.healing > 0,\n      spellDamage: formValues.spellDamage > 0,\n      mp5: formValues.mp5 > 0,\n      armor: formValues.armor > 0,\n      defense: formValues.defense > 0,\n      dodge: formValues.dodge > 0,\n    };\n  }\n\n  render() {\n    return (\n      <GearView\n        items={this._getItems(this.state.tab.toLowerCase())}\n        handleTabClick={this._handleTabClick}\n        tab={this.state.tab}\n        tabs={[\n          'Head',\n          'Neck',\n          'Shoulders',\n          'Chest',\n          'Cloak',\n          'Wrist',\n          'Hands',\n          'Waist',\n          'Legs',\n          'Feet',\n          'Finger',\n          'Trinket',\n        ]}\n        selectedTab={this.state.tab}\n        columns={this._getColumns()}\n      />\n    );\n  }\n}\n\nGearPage.defaultProps = {\n  items: []\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('GearPage')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nGearPage.propTypes = propTypes;\n\nexport default reduxForm({ form: 'GearPage' })(connect(mapStateToProps, mapDispatchToProps)(GearPage));\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport WeaponView from './WeaponView';\nimport items from '../../assets/data/items';\n\nconst weaponProficiencies = {\n  'druid': ['dagger', 'mace', 'mace2', 'staff', 'fist', 'misc'],\n  'hunter': ['sword', 'dagger','axe', 'sword2', 'axe2', 'polearm', 'staff', 'bow', 'crossbow', 'gun', 'thrown', 'fist', 'misc'],\n  'mage': ['sword', 'dagger', 'staff', 'wand', 'misc'],\n  'priest': ['dagger', 'mace', 'staff', 'wand', 'misc'],\n  'rogue': ['sword', 'dagger', 'mace', 'bow', 'crossbow', 'gun', 'thrown', 'fist', 'misc'],\n  'shaman': ['dagger','axe','mace', 'mace2', 'axe2', 'staff', 'misc', 'shield'],\n  'warlock': ['sword', 'dagger', 'staff', 'wand', 'misc'],\n  'warrior': ['sword', 'dagger','axe','mace', 'sword2', 'mace2', 'axe2', 'polearm', 'staff', 'bow', 'crossbow', 'gun', 'thrown', 'fist', 'misc', 'shield'],\n  'paladin': ['sword', 'axe','mace', 'sword2', 'mace2', 'axe2', 'polearm', 'misc', 'shield'],\n}\n\nclass WeaponPage extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      tab: '1-hand',\n    };\n    this._handleTabClick = this._handleTabClick.bind(this);\n    this._getItems = this._getItems.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.initialize({\n      strength: 0,\n      agility: 0,\n      intellect: 0,\n      spirit: 0,\n      stamina: 0,\n      meleeHit: 0,\n      meleeCrit: 0,\n      attackPower: 0,\n      spellHit: 0,\n      spellCrit: 0,\n      healing: 0,\n      spellDamage: 0,\n      mp5: 0,\n      armor: 0,\n      dodge: 0,\n      defense: 0\n    });\n  }\n\n  _handleTabClick(event) {\n    this.setState(Object.assign({}, this.state, {\n      tab: event.target.innerText,\n    }));\n  }\n\n  _getItems(slot) {\n    const formValues = this.props.formValues || {};\n    const patch = +formValues.patch || 12;\n    const classType = formValues.class;\n    const slotItems = _.filter(items, (item) => {\n      if (classType && item[classType] === 0) {\n        return false;\n      }\n\n      if (classType && weaponProficiencies[classType].indexOf(item.type) === -1) {\n        return false;\n      }\n      return item.slot === slot && item.patch <= patch;\n    });\n    const slotItemValues = _.map(slotItems, (item) => {\n      const score = Math.round(\n        (item.strength || 0) * +formValues.strength\n        + (item.agility || 0) * +formValues.agility\n        + (item.intellect || 0) * +formValues.intellect\n        + (item.spirit || 0) * +formValues.spirit\n        + (item.stamina || 0) * +formValues.stamina\n        + (item.meleeHit || 0) * +formValues.meleeHit\n        + (item.meleeCrit || 0) * +formValues.meleeCrit\n        + (item.attackPower || 0) * +formValues.attackPower\n        + (item.spellHit || 0) * +formValues.spellHit\n        + (item.spellCrit || 0) * +formValues.spellCrit\n        + (item.healing || 0) * +formValues.healing\n        + (item.spellDamage || 0) * +formValues.spellDamage\n        + (item.mp5 || 0) * +formValues.mp5\n        + (item.armor || 0) * +formValues.armor\n        + (item.defense || 0) * +formValues.defense\n        + (item.dodge || 0) * +formValues.dodge\n      );\n      return Object.assign({}, item, { score });\n    })\n    return _.orderBy(slotItemValues, ['score', 'itemLevel'], ['desc', 'desc']);\n  }\n\n  _getColumns(slot) {\n    const formValues = this.props.formValues || {};\n    return {\n      strength: formValues.strength > 0,\n      agility: formValues.agility > 0,\n      intellect: formValues.intellect > 0,\n      spirit: formValues.spirit > 0,\n      stamina: formValues.stamina > 0,\n      meleeHit: formValues.meleeHit > 0,\n      meleeCrit: formValues.meleeCrit > 0,\n      attackPower: formValues.attackPower > 0,\n      spellHit: formValues.spellHit > 0,\n      spellCrit: formValues.spellCrit > 0,\n      healing: formValues.healing > 0,\n      spellDamage: formValues.spellDamage > 0,\n      mp5: formValues.mp5 > 0,\n      armor: formValues.armor > 0,\n      defense: formValues.defense > 0,\n      dodge: formValues.dodge > 0,\n    };\n  }\n\n  render() {\n    return (\n      <WeaponView\n        items={this._getItems(this.state.tab.toLowerCase())}\n        handleTabClick={this._handleTabClick}\n        tab={this.state.tab}\n        tabs={[\n          '1-hand',\n          'main-hand',\n          '2-hand',\n          'Shield',\n          'off-hand',\n          'ranged',\n        ]}\n        selectedTab={this.state.tab}\n        columns={this._getColumns()}\n      />\n    );\n  }\n}\n\nWeaponPage.defaultProps = {\n  items: []\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('WeaponPage')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nWeaponPage.propTypes = propTypes;\n\nexport default reduxForm({ form: 'WeaponPage' })(connect(mapStateToProps, mapDispatchToProps)(WeaponPage));\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class SpellContainer extends Component {\n  render() {\n    return (\n      <div>\n        <div className='row columns'>\n          <nav aria-label='You are here:' role='navigation'>\n            <ul className='breadcrumbs'>\n              <li>\n                <NavLink\n                  exact\n                  to=\"/\"\n                >\n                  Home\n                </NavLink>\n              </li>\n              <li><span className='show-for-sr'>Current:</span> spells</li>\n            </ul>\n          </nav>\n        </div>\n        <div className='column row'>\n          {/* <h1>Spells</h1> */}\n          <div>\n            <h2>Druid</h2>\n            <p><NavLink exact to=\"/healing-touch\" >Healing Touch</NavLink></p>\n            <p><NavLink exact to=\"/rejuvenation\" >Rejuvenation</NavLink></p>\n            <p><NavLink exact to=\"/regrowth\" >Regrowth</NavLink></p>\n            <p><NavLink exact to=\"/lifebloom\" >Lifebloom</NavLink></p>\n          </div>\n          {/* <div>\n            <h2>Paladin</h2>\n            <p><NavLink exact to=\"flash-of-light\" >Flash Of Light</NavLink></p>\n            <p><NavLink exact to=\"holy-light\" >Holy Light</NavLink></p>\n          </div>\n          <div>\n            <h2>Priest</h2>\n            <p><NavLink exact to=\"/heal\">Heal</NavLink></p>\n            <p><NavLink exact to=\"/greater-heal\">Greater Heal</NavLink></p>\n            <p><NavLink exact to=\"/flash-heal\">Flash Heal</NavLink></p>\n            <p><NavLink exact to=\"/renew\">Renew</NavLink></p>\n            <p><NavLink exact to=\"/holy-nova\">Holy Nova</NavLink></p>\n            <p><NavLink exact to=\"/prayer-of-healing\">Prayer Of Healing</NavLink></p>\n          </div>\n          <div>\n            <h2>Shaman</h2>\n            <p><NavLink exact to=\"/lesser-healing-wave\">Lesser Healing Wave</NavLink></p>\n            <p><NavLink exact to=\"/healing-wave\">Healing Wave</NavLink></p>\n            <p><NavLink exact to=\"/chain-heal\">Chain Heal</NavLink></p>\n          </div>\n          <div>\n            <h2>Warlock</h2>\n            <p><NavLink exact to=\"/shadow-bolt\">Shadow Bolt</NavLink></p>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field } from 'redux-form';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\n\r\n\r\n// const CustomizedLabel = React.createClass({\r\n//   render () {\r\n//     const { x, y, stroke, value } = this.props;\r\n//     return <text x={ x } y={ y } dy={ -4 } fill={ stroke } fontSize={ 10 } textAnchor='middle'>{value}</text>\r\n//   }\r\n// });\r\n\r\nconst healingView = ({\r\n  healingTable,\r\n  children,\r\n  spell,\r\n  talents = [],\r\n}) => (\r\n  <div>\r\n    <div>\r\n      <div className='row columns'>\r\n        <nav aria-label='You are here:' role='navigation'>\r\n          <ul className='breadcrumbs'>\r\n            <li>\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                exact\r\n                to=\"/spell\"\r\n              >\r\n                Spells\r\n              </NavLink>\r\n            </li>\r\n            <li><span className='show-for-sr'>Current:</span> {spell.name}</li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className='row'>\r\n        <h3>{spell.name}</h3>\r\n        <p>{spell.description}</p>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='medium-8 large-7 columns'>\r\n          <ResponsiveContainer aspect={ 2 } >\r\n            <ComposedChart data={ healingTable } margin={ { top: 10, right: 0, left: 0, bottom: 0 } } >\r\n              {spell.direct && <Bar type='monotone' dataKey='base' stackId='1' stroke='#8884d8' fill='#8884d8' isAnimationActive={ false } />}\r\n              {spell.direct && <Bar type='monotone' dataKey='bonus' stackId='1' stroke='#82ca9d' fill='#82ca9d' isAnimationActive={ false } />}\r\n              {spell.direct && <Bar type='monotone' dataKey='crit' stackId='1' stroke='#ffc658' fill='#ffc658' isAnimationActive={ false } />}\r\n              {spell.hot && <Bar type='monotone' dataKey='hot' stackId='1' stroke='#ccaaee' fill='#ccaaee' isAnimationActive={ false } />}\r\n              {spell.hot && <Bar type='monotone' dataKey='bonusHot' stackId='1' stroke='#ccddff' fill='#ccddff' isAnimationActive={ false } />}\r\n              {/* <Line dataKey='total' stroke='black' isAnimationActive={ false } label={ <CustomizedLabel /> } /> */}\r\n              <Line dataKey='hps' stroke='green' isAnimationActive={ false } />\r\n              <Line dataKey='efficiency' yAxisId='1' stroke='blue' isAnimationActive={ false } />\r\n              <XAxis dataKey='rankDescription' />\r\n              <YAxis />\r\n              <YAxis yAxisId='1' orientation='right' />\r\n              <Legend />\r\n              <Tooltip isAnimationActive={ false } />\r\n              <CartesianGrid strokeDasharray='3 3' />\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className='medium-4 large-5 columns'>\r\n          {children}\r\n          {talents.map(talent => (\r\n            <div className='row' key={ talent.name }>\r\n              <div className='large-12 columns'>\r\n                <Field name={ talent.field } id={ talent.field } component='input' type='checkbox' />\r\n                <label htmlFor={ talent.field }>\r\n                  <span data-tooltip aria-haspopup='true' className='has-tip tip-bottom' title={ talent.description }>\r\n                    { talent.name }\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='column row'>\r\n        <hr />\r\n        <table className='medium-12 large-12'>\r\n          <thead>\r\n            <tr>\r\n              <th> Rank </th>\r\n              <th width='8%' className='text-right'> Mana</th>\r\n              <th width='8%' className='text-right'> Cast Time</th>\r\n              <th width='14%' className='text-right'> Base Heal</th>\r\n              <th width='14%' className='text-right'> Bonus Heal </th>\r\n              <th width='14%' className='text-right'> Crit Bonus </th>\r\n              <th width='14%' className='text-right'> Total </th>\r\n              {spell.hot &&\r\n                <th width='8%' className='text-right'> Tick </th>\r\n              }\r\n              <th width='12%' className='text-right'> HPS </th>\r\n              <th width='12%' className='text-right'> MP5 </th>\r\n              <th width='12%' className='text-right'> Efficiency </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {healingTable.map(rank => (\r\n              <tr key={ rank.rank }>\r\n                <td>{rank.rank}</td>\r\n                <td className='text-right'>{rank.mana}</td>\r\n                <td className='text-right'>{rank.castTime}</td>\r\n                <td className='text-right'>\r\n                  {spell.direct &&\r\n                    <span>{Math.round(rank.base)}</span>\r\n                  }\r\n                  {spell.hot &&\r\n                    <span>\r\n                      {spell.direct && <span>+</span>}\r\n                      <span>{ Math.round(rank.hot) }</span>\r\n                    </span>\r\n                  }\r\n                </td>\r\n                <td className='text-right'>\r\n                  {spell.direct &&\r\n                    <span>{Math.round(rank.bonus)}</span>\r\n                  }\r\n                  {spell.hot &&\r\n                    <span>\r\n                      {spell.direct && <span>+</span>}\r\n                      <span>{ Math.round(rank.bonusHot) }</span>\r\n                    </span>\r\n                  }\r\n                </td>\r\n                <td className='text-right'>{rank.crit}</td>\r\n                <td className='text-right'>{rank.total}</td>\r\n                {spell.hot &&\r\n                  <td className='text-right'>{Math.round(rank.hotTick)}</td>\r\n                }\r\n                <td className='text-right'>{rank.hps}</td>\r\n                <td className='text-right'>{rank.mp5}</td>\r\n                <td className='text-right'>{rank.efficiency}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <dl>\r\n          <dt>Base Heal</dt>\r\n          <dd>This is the average base heal of the spell including talents but without\r\n            any bonuses from spellpower .</dd>\r\n          <dt>Bonus Heal</dt>\r\n          <dd>The additional healing provided by bonus healing gear. (Note that\r\n            bonus healing is not affected by talents)</dd>\r\n          <dt>Crit Bonus</dt>\r\n          <dd>This is the average bonus provided by crit. </dd>\r\n          <dt>HPS</dt>\r\n          <dd>Max healing per second.</dd>\r\n          <dt>Efficiency</dt>\r\n          <dd>The amount of healing provided by 1 point of mana.</dd>\r\n        </dl>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nhealingView.propTypes = {\r\n  healingTable: PropTypes.arrayOf(PropTypes.any),\r\n};\r\n\r\nexport default healingView;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\nimport _ from 'lodash';\r\nimport HealingView from './HealingView';\r\nimport '../style.css';\r\n\r\nclass HealingContainer extends Component {\r\n\r\n  applyTalents({ spell, rank, character, target }, talents) {\r\n    const modifiedSpell = Object.assign({}, spell);\r\n    const modifiedRank = Object.assign({}, rank);\r\n    const modifiedCharacter = Object.assign({}, character);\r\n    const modifiedTarget = Object.assign({}, target);\r\n\r\n    _.forOwn(talents, (value) => {\r\n      \r\n      if (character[value.field]) {\r\n        value.effect({\r\n          spell,\r\n          rank,\r\n          modifiedSpell: modifiedSpell,\r\n          modifiedRank: modifiedRank,\r\n          character: modifiedCharacter,\r\n          target: modifiedTarget,\r\n        });\r\n      }\r\n    });\r\n    return {\r\n      modifiedSpell,\r\n      modifiedRank,\r\n      modifiedCharacter,\r\n      modifiedTarget,\r\n      spell,\r\n      rank,\r\n      character,\r\n      target,\r\n    };\r\n  }\r\n\r\n  computeSpellDetails({ modifiedSpell, modifiedRank, modifiedCharacter, target, spell, rank }) {\r\n\r\n    const lowLevelPenalty = (1 - ((20 - Math.min(rank.level, 20)) * 0.0375));\r\n    const coefficient = ((Math.min(rank.castTime, 3.5) / 3.5) * lowLevelPenalty);\r\n    const directCoefficient = spell.coefficient ? (modifiedSpell.coefficient * modifiedSpell.bonusDirect * lowLevelPenalty) : coefficient * modifiedSpell.bonusDirect;\r\n    const hotCoefficient = spell.hotCoefficient ? (modifiedSpell.hotCoefficient * modifiedSpell.bonusHotCo * lowLevelPenalty) : Math.min(((modifiedRank.duration || 15) / 15), 1) * lowLevelPenalty * modifiedSpell.bonusHotCo;\r\n\r\n    const totalCrit = Math.min(+modifiedCharacter.crit, 100);\r\n\r\n    const mana = modifiedRank.mana;\r\n    const castTime = Math.max(modifiedRank.castTime, 1.5);\r\n    const numberOfTicks = modifiedRank.duration / 3.0;\r\n    const modifiedNumberOfTicks = modifiedRank.duration / 3.0;\r\n    const bonusHot = modifiedSpell.hot ? hotCoefficient * +modifiedCharacter.healing : 0.0;\r\n    const baseHotTick  = (modifiedRank.hotTick || 0);\r\n    const bonusHotTick = (bonusHot / numberOfTicks);\r\n    const totalBaseHot = baseHotTick * modifiedNumberOfTicks;\r\n    const totalBonusHot = bonusHotTick * modifiedNumberOfTicks;\r\n    const totalHot = totalBaseHot + totalBonusHot || 0.0;\r\n    const hotTick = totalHot / modifiedNumberOfTicks;\r\n    const baseAverage = ((modifiedRank.min || 0) + (modifiedRank.max || 0)) / 2;\r\n    const bonusHeal = modifiedSpell.direct ? directCoefficient * +modifiedCharacter.healing : 0.0;\r\n    const averageCritBonus = ((baseAverage + bonusHeal) / 2) * (totalCrit / 100);\r\n    const totalDirect = (baseAverage + bonusHeal + averageCritBonus);\r\n    const totalAverage = (totalDirect + totalHot);\r\n    const manaEfficiency = totalAverage / mana;\r\n    \r\n    const healingPerSecond = spell.name === \"Lifebloom\" ? hotTick+baseAverage : (totalAverage / castTime);\r\n    console.log(\"FSLSDKFJS:DLKF:SDFLK\" + spell.name)\r\n\r\n    const manaPerSecond = 5 * mana * (1 / castTime);\r\n    const rating = ((healingPerSecond / 10) + (manaEfficiency * 10)) * 20;\r\n\r\n    return {\r\n      rank: rank.rank,\r\n      rankDescription: `Rank ${ rank.rank }`,\r\n      mana: mana.toFixed(2),\r\n      mp5: manaPerSecond.toFixed(2),\r\n      castTime,\r\n      base: baseAverage.toFixed(2),\r\n      hot: totalBaseHot,\r\n      hotTick,\r\n      bonus: bonusHeal.toFixed(2),\r\n      bonusHot: totalBonusHot,\r\n      crit: averageCritBonus.toFixed(2),\r\n      total: totalAverage.toFixed(2),\r\n      hps: healingPerSecond.toFixed(2),\r\n      efficiency: +(manaEfficiency).toFixed(2),\r\n      rating,\r\n      coefficient,\r\n    };\r\n  }\r\n\r\n  generateHealingTable(formValues = {}) {\r\n    return _.map(this.props.spell.ranks, rank => {\r\n      return this.computeSpellDetails(\r\n        this.applyTalents({\r\n          spell: this.props.spell,\r\n          rank,\r\n          character: formValues,\r\n          target: {},\r\n        }, this.props.talents));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { modifiedSpell } = this.applyTalents({\r\n      spell: this.props.spell,\r\n      rank: this.props.spell.ranks[0],\r\n      character: this.props.formValues || {},\r\n      target: {},\r\n    }, this.props.talents);\r\n    return (\r\n      <HealingView\r\n        spellName={ modifiedSpell.name }\r\n        spell={ modifiedSpell }\r\n        healingTable={ this.generateHealingTable(this.props.formValues) }\r\n        talents={ this.props.talents }\r\n      >\r\n        <h3>Character</h3>\r\n        <div className='row'>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='healing'>Healing\r\n              <Field name='healing' component='input' type='number' min='0' max='9999' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='crit'>Crit %\r\n              <Field name='crit' component='input' type='number' min='0' max='100' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='spirit'>Spirit\r\n              <Field name='spirit' component='input' type='number' min='0' max='999' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns' />\r\n        </div>\r\n      </HealingView>\r\n    );\r\n  }\r\n}\r\nexport default connect()(HealingContainer);\r\n","/* eslint-disable no-param-reassign */\r\n\r\nexport const amplifyMagic = {\r\n  field: 'amplifyMagic',\r\n  name: 'Amplify Magic (with +50% talent)',\r\n  description: 'Amplifies magic used against the targeted party member, increasing damage taken from spells by up to 90(135) and healing spells by up to 180(270)',\r\n  effect: ({ character }) => {\r\n    character.healing = +character.healing + 270;\r\n  },\r\n};\r\n\r\nexport const lifebloomStacks = {\r\n  field: 'lifebloomStacks',\r\n  name: 'Lifebloom Stacks (leave on)',\r\n  description: 'Temp fix to show lifebloom stacks.',\r\n  effect: ({ rank, modifiedRank, modifiedSpell }) => {\r\n    if (rank.rank === 2){\r\n      modifiedRank.hotTick *=2;\r\n      modifiedRank.hotTick -=.1;\r\n      modifiedSpell.bonusHotCo *=2;\r\n    }\r\n    if (rank.rank === 3){\r\n      modifiedRank.hotTick *= 3.0;\r\n      modifiedRank.hotTick -=.1;\r\n      modifiedSpell.bonusHotCo *=3;\r\n    }\r\n  },\r\n};\r\n\r\n\r\nexport const lifebloomHoT = {\r\n  field: 'lifebloomHoT',\r\n  name: 'Lifebloom HoT Only',\r\n  description: 'Shows only the HoT portion of LB',\r\n  effect: ({ rank, spell, modifiedRank, modifiedSpell }) => {\r\n    modifiedSpell.direct = false;\r\n    modifiedRank.min =0;\r\n    modifiedRank.max=0;\r\n  },\r\n};\r\n\r\n\r\nexport const improvedRegrowth = {\r\n  field: 'improvedRegrowth',\r\n  name: 'Improved Regrowth',\r\n  description: 'Increases the critical effect chance of your Regrowth spell by 50%.',\r\n  effect: ({ character }) => { character.crit = Math.min(100, (+character.crit + 50)); },\r\n};\r\n\r\nexport const naturalPerfection = {\r\n  field: 'naturalPerfection',\r\n  name: 'Natural Perfection',\r\n  description: 'Your crit chance with all spells is increased by 3%.',\r\n  effect: ({ character }) => { character.crit = Math.min(100, (+character.crit + 3)); },\r\n};\r\n\r\nexport const giftOfNature = {\r\n  field: 'giftOfNature',\r\n  name: 'Gift of Nature',\r\n  description: 'Increases the effect of all healing spells by 10%.',\r\n  effect: ({ modifiedRank, rank, modifiedSpell, spell, character }) => {\r\n    modifiedRank.min += rank.min * 0.1;\r\n    modifiedRank.max += rank.max * 0.1;\r\n    modifiedRank.hotTick += rank.hotTick * 0.1;\r\n    // modifiedSpell.hotCoefficient += spell.hotCoefficient * .1\r\n\r\n    modifiedSpell.coefficient += modifiedSpell.coefficient * .1\r\n    // if( spell.name === \"Regrowth\"){\r\n    //   modifiedSpell.bonusDirect *= 1.1;\r\n    //   modifiedSpell.bonusHotCo *= 1.1;\r\n    // }\r\n    // else{\r\n    modifiedSpell.bonusHotCo *= 1.1; //+= .1\r\n    //   // modifiedSpell.bonusDirect = modifiedSpell.bonusDirect *1.1\r\n    // }\r\n  },\r\n};\r\n\r\nexport const naturesGrace = {\r\n  field: 'naturesGrace',\r\n  name: 'Nature\\'s Grace',\r\n  description: 'All spell criticals grace you with a blessing of nature, reducing the casting time of your next spell by 0.5 sec.',\r\n  effect: ({ modifiedRank, character }) => { modifiedRank.castTime -= (0.5 * (character.crit / 100)); },\r\n};\r\n\r\nexport const moonglow = {\r\n  field: 'moonglow',\r\n  name: 'Moonglow',\r\n  description: 'Reduces the Mana cost of your Moonfire, Starfire, Wrath, Healing Touch, Regrowth and Rejuvenation spells by 9%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.09; },\r\n};\r\n\r\nexport const tranquilSpirit = {\r\n  field: 'tranquilSpirit',\r\n  name: 'Tranquil Spirit',\r\n  description: 'Reduces the mana cost of your Healing Touch and Tranquility spells by 10%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.1; },\r\n};\r\n\r\nexport const improvedRejuvenation = {\r\n  field: 'improvedRejuvenation',\r\n  name: 'Improved Rejuvenation',\r\n  description: 'Increases the effect of your Rejuvenation spell by 15%.',\r\n  effect: ({ modifiedRank, rank, modifiedSpell, character, spell }) => {\r\n    modifiedRank.hotTick += rank.hotTick * 0.15;\r\n    // modifiedSpell.bonusHotCo *= 1.15;\r\n    modifiedSpell.hotCoefficient += spell.hotCoefficient * .15\r\n    console.log(\"***********************\" + modifiedRank.hotTick)\r\n  },\r\n};\r\n\r\nexport const empoweredRejuvenation = {\r\n  field: 'empoweredRejuvenation',\r\n  name: 'Empowered Rejuvenation',\r\n  description: 'The bonus healing of your HoT spells is increased by 20%.',\r\n  effect: ({ modifiedRank, rank, modifiedSpell, spell, character }) => {\r\n    // modifiedSpell.bonusHotCo *= 1.20;\r\n    if(spell.name === \"Rejuvenation\"){\r\n      modifiedSpell.hotCoefficient = modifiedSpell.hotCoefficient + .2\r\n    }\r\n    // if(spell.name === \"Regrowth\"){\r\n    else{\r\n      modifiedSpell.bonusDirect *= 1.2;\r\n      modifiedSpell.bonusHotCo *= 1.2;\r\n    }\r\n  },\r\n};\r\n\r\nexport const improvedHealingTouch = {\r\n  field: 'improvedHealingTouch',\r\n  name: 'Improved Healing Touch',\r\n  description: 'Reduces the cast time of your Healing Touch spell by 0.5 sec.',\r\n  effect: ({ modifiedRank }) => { modifiedRank.castTime -= 0.5; },\r\n};\r\n\r\nexport const empoweredTouch = {\r\n  field: 'empoweredTouch',\r\n  name: 'Empowered Touch',\r\n  description: 'Your Healing Touch spell gains an additional 20% of your bonus healing',\r\n  effect: ({ modifiedSpell }) => { modifiedSpell.bonusDirect = modifiedSpell.bonusDirect * 1.2; },\r\n};\r\n\r\nexport const t2Druid8set = {\r\n  field: 't2Druid8set',\r\n  name: 'T2 8 Set Bonus',\r\n  description: 'Increases the duration of your Rejuvenation spell by 3 sec.',\r\n  effect: ({ modifiedRank }) => { modifiedRank.duration = 15; },\r\n};\r\n\r\nexport const t2Druid5set = {\r\n  field: 't2Druid5set',\r\n  name: 'T2 5 Set Bonus',\r\n  description: 'Reduces Regrowth cast time by .2 seconds',\r\n  effect: ({ modifiedRank }) => { modifiedRank.castTime = modifiedRank.castTime- 0.2; },\r\n};\r\n\r\nexport const t3Druid4set = {\r\n  field: 't3Druid4set',\r\n  name: 'T3 4 Set Bonus',\r\n  description: 'Reduces the mana cost of your Healing Touch, Regrowth, Rejuvenation, and Tranquility spells by 3%',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.03; },\r\n};\r\n\r\nexport const t3Druid8set = {\r\n  field: 't3Druid8set',\r\n  name: 'T3 8 Set Bonus',\r\n  description: 'On Healing Touch critical hits, you regain 30% of the mana cost of the spell',\r\n  effect: ({ modifiedRank, character, rank }) => { modifiedRank.mana -= ((character.crit / 100) * rank.mana * 0.3); },\r\n};\r\n\r\nexport const treeOfLifeForm = {\r\n  field: 'treeOfLifeForm',\r\n  name: 'Tree Of Life Form',\r\n  description: 'You can only cast Swiftmend, Innervate, Natures Swiftness, Rebirth, Barkskin, poison removing and healing over time spells, but the mana cost of these spells is reduced by 20%. ',\r\n  effect: ({ modifiedRank, rank}) => { modifiedRank.mana -= rank.mana * 0.2; },\r\n};\r\n\r\nexport const treeOfLifeAura = {\r\n  field: 'treeOfLifeAura',\r\n  name: 'Tree Of Life Aura',\r\n  description: 'While in this form you increase healing received by 25% of your total Spirit for all party members within 45 yards',\r\n  effect: ({ character }) => {\r\n    character.healing = +character.healing + (character.spirit * 0.25);\r\n  },\r\n};\r\n\r\nexport const idolOfHealth = {\r\n  field: 'idolOfHealth',\r\n  name: 'Idol of Health',\r\n  description: 'Increase the amount healed by Healing Touch by 100',\r\n  effect: ({ modifiedRank, rank }) => {\r\n    modifiedRank.min += 100;\r\n    modifiedRank.max += 100; },\r\n};\r\n\r\nexport const idolOfTheEmeraldQueen = {\r\n  field: 'idolOfTheEmeraldQueen',\r\n  name: 'Idol Of The Emerald Queen',\r\n  description: 'Increase the periodic healing of your Lifebloom by up to 88',\r\n  effect: ({ modifiedRank}) => { modifiedRank.hotTick += 12.57; },\r\n};\r\n\r\nexport const idolOfLongevity = {\r\n  field: 'idolOfLongevity',\r\n  name: 'Idol of Longevity',\r\n  description: 'Gain up to 25 mana each time you cast Healing touch',\r\n  effect: ({ modifiedRank, modifiedSpell }) => {\r\n    const lowLevelPenalty = (1 - ((20 - Math.min(modifiedRank.level, 20)) * 0.0375));\r\n    const coefficient = (Math.min(modifiedRank.castTime, 3.5) / 3.5) * lowLevelPenalty;\r\n    const directCoefficient = modifiedSpell.coefficient ? (modifiedSpell.coefficient * lowLevelPenalty) : coefficient;\r\n    modifiedRank.mana = Math.max(modifiedRank.mana - (25 * directCoefficient), 1);\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const healingLight = {\r\n  field: 'healingLight',\r\n  name: 'Healing Light',\r\n  description: 'Increases the amount healed by your Holy Light and Flash of Light spells by 12%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.min += rank.min * 0.12; modifiedRank.max += rank.max * 0.12; },\r\n};\r\n\r\nexport const illumination = {\r\n  field: 'illumination',\r\n  name: 'Illumination',\r\n  description: 'After getting a critical effect from your Flash of Light, Holy Light, or Holy Shock heal spell, gives you a 100% chance to gain Mana equal to the base cost of the spell.',\r\n  effect: ({ modifiedRank, rank, character }) => { modifiedRank.mana -= ((character.crit / 100) * rank.mana); },\r\n};\r\n\r\nexport const blessingOfLight = {\r\n  field: 'blessingOfLight',\r\n  name: 'Blessing of Light',\r\n  description: 'Increases the effects of Holy Light spells used on the target by up to 400 and the effect Flash of Light spells used on the target by up to 115.',\r\n  effect: ({ modifiedRank, rank, spell }) => {\r\n    if (spell.name === 'Flash Of Light') {\r\n      modifiedRank.min += 115;\r\n      modifiedRank.max += 115;\r\n    } else if (spell.name === 'Holy Light') {\r\n      const holyLightCoefficients = [0.0, 0.2, 0.4, 0.7, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\r\n      modifiedRank.min += (holyLightCoefficients[rank.rank] * 400);\r\n      modifiedRank.max += (holyLightCoefficients[rank.rank] * 400);\r\n    }\r\n  },\r\n};\r\n\r\nexport const mentalAgility = {\r\n  field: 'mentalAgility',\r\n  name: 'Mental Agility',\r\n  description: 'Reduces the mana cost of your instant cast spells by 10%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.1; },\r\n};\r\n\r\nexport const improvedRenew = {\r\n  field: 'improvedRenew',\r\n  name: 'Improved Renew',\r\n  description: 'Increases the amount healed by your Renew spell by 15%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.hotTick +=  rank.hotTick * 0.15; },\r\n};\r\n\r\nexport const divineFury = {\r\n  field: 'divineFury',\r\n  name: 'Divine Fury',\r\n  description: 'Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.5 sec.',\r\n  effect: ({ modifiedRank }) => { modifiedRank.castTime -= 0.5; },\r\n};\r\n\r\nexport const improvedHealing = {\r\n  field: 'improvedHealing',\r\n  name: 'Improved Healing',\r\n  description: 'Reduces the Mana cost of your Lesser Heal, Heal, and Greater Heal spells by 15%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.15; },\r\n};\r\n\r\nexport const spiritualHealing = {\r\n  field: 'spiritualHealing',\r\n  name: 'Spiritual Healing',\r\n  description: 'Increases the amount healed by your healing spells by 10%.',\r\n  effect: ({ modifiedRank, rank }) => {\r\n    modifiedRank.min += rank.min * 0.1;\r\n    modifiedRank.max += rank.max * 0.1;\r\n    modifiedRank.hotTick += rank.hotTick * 0.1;\r\n  },\r\n};\r\n\r\nexport const improvedPrayerOfHealing = {\r\n  field: 'improvedPrayerOfHealing',\r\n  name: 'Improved Prayer Of Healing',\r\n  description: 'Reduces the Mana cost of your Prayer of Healing spell by 20%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.2; },\r\n};\r\n\r\nexport const t2Priest8set = {\r\n  field: 't2Priest8set',\r\n  name: 'T2 8 Set Bonus',\r\n  description: 'Your Greater Heals now have a heal over time component equivalent to a rank 5 renew.',\r\n  effect: ({ modifiedRank, modifiedSpell }) => { modifiedRank.hotTick = 315/5; modifiedRank.duration = 15; modifiedSpell.hot = true; },\r\n};\r\n\r\nexport const improvedHealingWave = {\r\n  field: 'improvedHealingWave',\r\n  name: 'Improved Healing Wave',\r\n  description: 'Reduces the casting time of your Healing Wave spell by 0.5 sec.',\r\n  effect: ({ modifiedRank }) => { modifiedRank.castTime -= 0.5; },\r\n};\r\n\r\nexport const tidalFocus = {\r\n  field: 'tidalFocus',\r\n  name: 'Tidal Focus',\r\n  description: 'Reduces the Mana cost of your healing spells by 5%.',\r\n  effect: ({ modifiedRank, rank }) => { modifiedRank.mana -= rank.mana * 0.05; },\r\n};\r\n\r\nexport const healingWay = {\r\n  field: 'healingWay',\r\n  name: 'Healing Way',\r\n  description: 'Your Healing Wave spells have a 100% chance to increase the effect of subsequent Healing Wave spells on that target by 6% for 15 sec.',\r\n  effect: ({ modifiedRank, rank }) => {\r\n    modifiedRank.min += rank.min * 0.06;\r\n    modifiedRank.max += rank.max * 0.06;\r\n    modifiedRank.hotTick += rank.hotTick * 0.06;\r\n  },\r\n};\r\n\r\nexport const purification = {\r\n  field: 'purification',\r\n  name: 'Purification',\r\n  description: 'Increases the effectiveness of your healing spells by 10%.',\r\n  effect: ({ modifiedRank, rank }) => {\r\n    modifiedRank.min += rank.min * 0.1;\r\n    modifiedRank.max += rank.max * 0.1;\r\n    modifiedRank.hotTick += rank.hotTick * 0.1;\r\n  },\r\n};\r\n\r\nexport const improvedShadowBolt = {\r\n  field: 'improvedShadowBolt',\r\n  name: 'Improved Shadow Bolt',\r\n  description: 'Your Shadow Bolt critical strikes increase Shadow Damage dealt to the target by 20% until 4 non-periodic damage sources are applied.',\r\n  effect: ({ modifiedRank, character }) => {\r\n    const bonus = ((((100 - character.crit) / 100) ** 4) * 0.2) + 1;\r\n    modifiedRank.min *= bonus;\r\n    modifiedRank.max *= bonus;\r\n    modifiedRank.hotTick *= bonus;\r\n    character.damage *= bonus;\r\n  },\r\n};\r\n\r\nexport const cataclysm = {\r\n  field: 'cataclysm',\r\n  name: 'Cataclysm',\r\n  description: 'Reduce the mana cost of your Destruction spells by 5%.',\r\n  effect: ({ modifiedRank, rank }) => {\r\n    modifiedRank.mana -= rank.mana * 0.05;\r\n  },\r\n};\r\n\r\nexport const bane = {\r\n  field: 'bane',\r\n  name: 'Bane',\r\n  description: 'Reduce the casting time of your Shadow Bolt and Immolate spells by 0.5 sec and your Soul Fire spell by 2.0 sec.',\r\n  effect: ({ modifiedRank }) => {\r\n    modifiedRank.castTime -= 0.5;\r\n  },\r\n};\r\n\r\nexport const shadowMastery = {\r\n  field: 'shadowMastery',\r\n  name: 'Shadow Mastery',\r\n  description: 'Increases the damage dealt or life drained by your shadow spells by 10%.',\r\n  effect: ({ modifiedRank, rank, character }) => {\r\n    modifiedRank.min += rank.min * 0.1;\r\n    modifiedRank.max += rank.max * 0.1;\r\n    modifiedRank.dot += rank.dot * 0.1;\r\n    character.damage *= 1.1;\r\n  },\r\n};\r\n\r\nexport const demonicSacrifice = {\r\n  field: 'demonicSacrifice',\r\n  name: 'Demonic Sacrifice',\r\n  description: 'Increases your shadow damage by 15%.',\r\n  effect: ({ modifiedRank, rank, character }) => {\r\n    modifiedRank.min += rank.min * 0.15;\r\n    modifiedRank.max += rank.max * 0.15;\r\n    modifiedRank.dot += rank.dot * 0.15;\r\n    character.damage *= 1.15;\r\n  },\r\n};\r\n\r\nexport const ruin = {\r\n  field: 'ruin',\r\n  name: 'Ruin',\r\n  description: 'Increases the critical strike damage bonus of your destruction spells by 100%.',\r\n  effect: ({ modifiedSpell }) => {\r\n    modifiedSpell.critMultiplier = 1.0;\r\n  },\r\n};\r\n\r\n\r\n","\r\nexport const regrowth = {\r\n  name: 'Regrowth',\r\n  description: 'Heals a friendly target instantly and over 21 sec.',\r\n  direct: true,\r\n  hot: true,\r\n  // Coefficients https://github.com/elysium-project/server/pull/860\r\n  coefficient: 0.289,\r\n  hotCoefficient: 0.7,\r\n  bonusDirect: 1,\r\n  bonusHotCo: 1,\r\n  ranks: [\r\n    { 'rank': 1, 'mana': 120, 'level': 12, 'castTime': 2, 'min': 92, 'max': 107, 'hotTick': 98/7, 'duration': 21 },\r\n    { 'rank': 2, 'mana': 205, 'level': 18, 'castTime': 2, 'min': 176, 'max': 201, 'hotTick': 175/7, 'duration': 21 },\r\n    { 'rank': 3, 'mana': 185, 'level': 24, 'castTime': 2, 'min': 240, 'max': 275, 'hotTick': 259/7, 'duration': 21 },\r\n    { 'rank': 4, 'mana': 230, 'level': 30, 'castTime': 2, 'min': 318, 'max': 362, 'hotTick': 343/7, 'duration': 21 },\r\n    { 'rank': 5, 'mana': 275, 'level': 36, 'castTime': 2, 'min': 405, 'max': 458, 'hotTick': 427/7, 'duration': 21 },\r\n    { 'rank': 6, 'mana': 335, 'level': 42, 'castTime': 2, 'min': 511, 'max': 576, 'hotTick': 546/7, 'duration': 21 },\r\n    { 'rank': 7, 'mana': 405, 'level': 48, 'castTime': 2, 'min': 646, 'max': 725, 'hotTick': 686/7, 'duration': 21 },\r\n    { 'rank': 8, 'mana': 485, 'level': 54, 'castTime': 2, 'min': 809, 'max': 906, 'hotTick': 861/7, 'duration': 21 },\r\n    { 'rank': 9, 'mana': 575, 'level': 60, 'castTime': 2, 'min': 1003, 'max': 1120, 'hotTick': 1064/7, 'duration': 21 },\r\n    { 'rank': 10, 'mana': 675, 'level': 65, 'castTime': 2, 'min': 1215, 'max': 1356, 'hotTick': 1274/7, 'duration': 21 },\r\n  ],\r\n};\r\n\r\nexport const healingTouch = {\r\n  name: 'Healing Touch',\r\n  description: 'Heals a friendly target',\r\n  direct: true,\r\n  hot: false,\r\n  bonusDirect: 1,\r\n  bonusHotCo: 1,\r\n  ranks: [\r\n    { 'rank': '1', 'mana': 25, 'level': 1, 'castTime': 1.5, 'min': 40, 'max': 55, 'hotTick': 0 },\r\n    { 'rank': '2', 'mana': 55, 'level': 8, 'castTime': 2, 'min': 94, 'max': 119, 'hotTick': 0 },\r\n    { 'rank': '3', 'mana': 110, 'level': 14, 'castTime': 2.5, 'min': 204, 'max': 253, 'hotTick': 0 },\r\n    { 'rank': '4', 'mana': 185, 'level': 20, 'castTime': 3, 'min': 376, 'max': 459, 'hotTick': 0 },\r\n    { 'rank': '5', 'mana': 270, 'level': 26, 'castTime': 3.5, 'min': 589, 'max': 712, 'hotTick': 0 },\r\n    { 'rank': '6', 'mana': 335, 'level': 32, 'castTime': 3.5, 'min': 761, 'max': 914, 'hotTick': 0 },\r\n    { 'rank': '7', 'mana': 405, 'level': 38, 'castTime': 3.5, 'min': 958, 'max': 1143, 'hotTick': 0 },\r\n    { 'rank': '8', 'mana': 495, 'level': 44, 'castTime': 3.5, 'min': 1224, 'max': 1453, 'hotTick': 0 },\r\n    { 'rank': '9', 'mana': 600, 'level': 50, 'castTime': 3.5, 'min': 1545, 'max': 1826, 'hotTick': 0 },\r\n    { 'rank': '10', 'mana': 720, 'level': 56, 'castTime': 3.5, 'min': 1916, 'max': 2257, 'hotTick': 0 },\r\n    { 'rank': '11', 'mana': 800, 'level': 60, 'castTime': 3.5, 'min': 2266, 'max': 2677, 'hotTick': 0 },\r\n    { 'rank': '12', 'mana': 820, 'level': 62, 'castTime': 3.5, 'min': 2401, 'max': 2827, 'hotTick': 0 },\r\n    { 'rank': '13', 'mana': 935, 'level': 69, 'castTime': 3.5, 'min': 2715, 'max': 3206, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const rejuvenation = {\r\n  name: 'Rejuvenation',\r\n  description: 'Heals the target over 12 sec.',\r\n  direct: false,\r\n  hot: true,\r\n  hotCoefficient: .8,\r\n  bonusDirect: 1,\r\n  bonusHotCo: 1,\r\n  ranks: [\r\n    { 'rank': 1, 'mana': 25, 'level': 4, 'castTime': 1.5, 'hotTick': 32/4, 'duration': 12 },\r\n    { 'rank': 2, 'mana': 40, 'level': 10, 'castTime': 1.5, 'hotTick': 56/4, 'duration': 12 },\r\n    { 'rank': 3, 'mana': 75, 'level': 16, 'castTime': 1.5, 'hotTick': 116/4, 'duration': 12 },\r\n    { 'rank': 4, 'mana': 105, 'level': 22, 'castTime': 1.5, 'hotTick': 180/4, 'duration': 12 },\r\n    { 'rank': 5, 'mana': 135, 'level': 28, 'castTime': 1.5, 'hotTick': 244/4, 'duration': 12 },\r\n    { 'rank': 6, 'mana': 160, 'level': 34, 'castTime': 1.5, 'hotTick': 304/4, 'duration': 12 },\r\n    { 'rank': 7, 'mana': 195, 'level': 40, 'castTime': 1.5, 'hotTick': 388/4, 'duration': 12 },\r\n    { 'rank': 8, 'mana': 235, 'level': 46, 'castTime': 1.5, 'hotTick': 488/4, 'duration': 12 },\r\n    { 'rank': 9, 'mana': 280, 'level': 52, 'castTime': 1.5, 'hotTick': 608/4, 'duration': 12 },\r\n    { 'rank': 10, 'mana': 335, 'level': 58, 'castTime': 1.5, 'hotTick': 756/4, 'duration': 12 },\r\n    { 'rank': 11, 'mana': 360, 'level': 60, 'castTime': 1.5, 'hotTick': 888/4, 'duration': 12 },\r\n    { 'rank': 12, 'mana': 370, 'level': 63, 'castTime': 1.5, 'hotTick': 932/4, 'duration': 12 },\r\n    { 'rank': 13, 'mana': 415, 'level': 69, 'castTime': 1.5, 'hotTick': 1060/4, 'duration': 12 },\r\n  ],\r\n};\r\n\r\nexport const lifebloom = {\r\n  name: 'Lifebloom',\r\n  description: 'Heals the target for 273 over 7 sec. When Lifebloom completes its duration or is dispelled, the target instantly heals themself for 600. This effect can stack up to 600 times on the same target.',\r\n  direct: true,\r\n  hot: true,\r\n  coefficient: 1,\r\n  hotCoefficient: 1,\r\n  bonusDirect: .3422,\r\n  bonusHotCo: .5194,\r\n  ranks: [\r\n    { 'rank': 1, 'mana': 220, 'level': 64, 'castTime': 1.5, 'min': 600, 'max': 600, 'hotTick': 39, 'duration': 21 },\r\n    { 'rank': 2, 'mana': 220, 'level': 64, 'castTime': 1.5, 'min': 600, 'max': 600, 'hotTick': 39, 'duration': 21 },\r\n    { 'rank': 3, 'mana': 220, 'level': 64, 'castTime': 1.5, 'min': 600, 'max': 600, 'hotTick': 39, 'duration': 21 },\r\n  ],\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const flashHeal = {\r\n  name: 'Flash Heal',\r\n  description: 'Heals a friendly target',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n    { 'rank': 1, 'mana': 125, 'level': 20, 'castTime': 1.5, 'min': 202, 'max': 247, 'hotTick': 0 },\r\n    { 'rank': 2, 'mana': 155, 'level': 26, 'castTime': 1.5, 'min': 268, 'max': 325, 'hotTick': 0 },\r\n    { 'rank': 3, 'mana': 185, 'level': 32, 'castTime': 1.5, 'min': 339, 'max': 406, 'hotTick': 0 },\r\n    { 'rank': 4, 'mana': 215, 'level': 38, 'castTime': 1.5, 'min': 413, 'max': 492, 'hotTick': 0 },\r\n    { 'rank': 5, 'mana': 265, 'level': 44, 'castTime': 1.5, 'min': 534, 'max': 633, 'hotTick': 0 },\r\n    { 'rank': 6, 'mana': 315, 'level': 50, 'castTime': 1.5, 'min': 662, 'max': 783, 'hotTick': 0 },\r\n    { 'rank': 7, 'mana': 380, 'level': 56, 'castTime': 1.5, 'min': 828, 'max': 975, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const flashOfLight = {\r\n  name: 'Flash Of Light',\r\n  description: 'Heals a friendly target',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 35, 'level': 20, 'castTime': 1.5, 'min': 66, 'max': 77, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 50, 'level': 26, 'castTime': 1.5, 'min': 102, 'max': 117, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 70, 'level': 34, 'castTime': 1.5, 'min': 152, 'max': 171, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 90, 'level': 42, 'castTime': 1.5, 'min': 206, 'max': 231, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 115, 'level': 50, 'castTime': 1.5, 'min': 277, 'max': 310, 'hotTick': 0 },\r\n  { 'rank': 6, 'mana': 140, 'level': 58, 'castTime': 1.5, 'min': 348, 'max': 389, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const holyLight = {\r\n  name: 'Holy Light',\r\n  description: 'Heals a friendly target',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 35, 'level': 1, 'castTime': 2.5, 'min': 42, 'max': 51, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 60, 'level': 6, 'castTime': 2.5, 'min': 81, 'max': 96, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 110, 'level': 14, 'castTime': 2.5, 'min': 167, 'max': 196, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 190, 'level': 22, 'castTime': 2.5, 'min': 321, 'max': 368, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 275, 'level': 30, 'castTime': 2.5, 'min': 506, 'max': 569, 'hotTick': 0 },\r\n  { 'rank': 6, 'mana': 365, 'level': 38, 'castTime': 2.5, 'min': 716, 'max': 799, 'hotTick': 0 },\r\n  { 'rank': 7, 'mana': 465, 'level': 46, 'castTime': 2.5, 'min': 967, 'max': 1076, 'hotTick': 0 },\r\n  { 'rank': 8, 'mana': 580, 'level': 54, 'castTime': 2.5, 'min': 1271, 'max': 1414, 'hotTick': 0 },\r\n  { 'rank': 9, 'mana': 660, 'level': 60, 'castTime': 2.5, 'min': 1589, 'max': 1770, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const renew = {\r\n  name: 'Renew',\r\n  description: 'Heals the target of damage over 15 sec.',\r\n  direct: false,\r\n  hot: true,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 30, 'level': 8, 'castTime': 1.5, 'hotTick': 45/5, 'duration': 15 },\r\n  { 'rank': 2, 'mana': 65, 'level': 14, 'castTime': 1.5, 'hotTick': 100/5, 'duration': 15 },\r\n  { 'rank': 3, 'mana': 105, 'level': 20, 'castTime': 1.5, 'hotTick': 175/5, 'duration': 15 },\r\n  { 'rank': 4, 'mana': 140, 'level': 26, 'castTime': 1.5, 'hotTick': 245/5, 'duration': 15 },\r\n  { 'rank': 5, 'mana': 170, 'level': 32, 'castTime': 1.5, 'hotTick': 315/5, 'duration': 15 },\r\n  { 'rank': 6, 'mana': 205, 'level': 38, 'castTime': 1.5, 'hotTick': 400/5, 'duration': 15 },\r\n  { 'rank': 7, 'mana': 250, 'level': 44, 'castTime': 1.5, 'hotTick': 510/5, 'duration': 15 },\r\n  { 'rank': 8, 'mana': 305, 'level': 50, 'castTime': 1.5, 'hotTick': 650/5, 'duration': 15 },\r\n  { 'rank': 9, 'mana': 365, 'level': 56, 'castTime': 1.5, 'hotTick': 810/5, 'duration': 15 },\r\n  { 'rank': 10, 'mana': 410, 'level': 60, 'castTime': 1.5, 'hotTick': 970/5, 'duration': 15 },\r\n  ],\r\n};\r\n\r\nexport const greaterHeal = {\r\n  name: 'Greater Heal',\r\n  description: 'A slow casting spell that heals a single target',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 370, 'level': 40, 'castTime': 3, 'min': 924, 'max': 1039, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 455, 'level': 46, 'castTime': 3, 'min': 1177, 'max': 1318, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 545, 'level': 52, 'castTime': 3, 'min': 1469, 'max': 1642, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 655, 'level': 58, 'castTime': 3, 'min': 1812, 'max': 2021, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 710, 'level': 60, 'castTime': 3, 'min': 1965, 'max': 2194, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const heal = {\r\n  name: 'Heal',\r\n  description: 'Heal your target',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 155, 'level': 16, 'castTime': 3, 'min': 306, 'max': 353, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 205, 'level': 22, 'castTime': 3, 'min': 444, 'max': 507, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 255, 'level': 28, 'castTime': 3, 'min': 585, 'max': 662, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 305, 'level': 34, 'castTime': 3, 'min': 734, 'max': 827, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const holyNova = {\r\n  name: 'Holy Nova',\r\n  description: 'Causes an explosion of holy light around the caster, causing Holy damage to all enemy targets within 10 yards and healing all party members within 10 yards. These effects cause no threat.',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 185, 'level': 20, 'castTime': 1.5, 'min': 54, 'max': 63, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 290, 'level': 28, 'castTime': 1.5, 'min': 88, 'max': 101, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 400, 'level': 36, 'castTime': 1.5, 'min': 124, 'max': 143, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 520, 'level': 44, 'castTime': 1.5, 'min': 165, 'max': 192, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 635, 'level': 52, 'castTime': 1.5, 'min': 239, 'max': 276, 'hotTick': 0 },\r\n  { 'rank': 6, 'mana': 750, 'level': 60, 'castTime': 1.5, 'min': 301, 'max': 350, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const prayerOfHealing = {\r\n  name: 'Prayer of Healing',\r\n  description: 'A powerful prayer heals party members within 30 yards.',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 410, 'level': 30, 'castTime': 3, 'min': 312, 'max': 333, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 560, 'level': 40, 'castTime': 3, 'min': 458, 'max': 487, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 770, 'level': 50, 'castTime': 3, 'min': 674, 'max': 713, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 1030, 'level': 60, 'castTime': 3, 'min': 938, 'max': 991, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 1070, 'level': 60, 'castTime': 3, 'min': 1040, 'max': 1099, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const healingWave = {\r\n  name: 'Healing Wave',\r\n  description: 'Heals a friendly target.',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 25, 'level': 1, 'castTime': 1.5, 'min': 36, 'max': 47, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 45, 'level': 6, 'castTime': 2, 'min': 68, 'max': 83, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 80, 'level': 12, 'castTime': 2.5, 'min': 136, 'max': 163, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 155, 'level': 18, 'castTime': 3, 'min': 279, 'max': 328, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 200, 'level': 24, 'castTime': 3, 'min': 389, 'max': 454, 'hotTick': 0 },\r\n  { 'rank': 6, 'mana': 265, 'level': 32, 'castTime': 3, 'min': 552, 'max': 639, 'hotTick': 0 },\r\n  { 'rank': 7, 'mana': 340, 'level': 40, 'castTime': 3, 'min': 759, 'max': 874, 'hotTick': 0 },\r\n  { 'rank': 8, 'mana': 440, 'level': 48, 'castTime': 3, 'min': 1040, 'max': 1191, 'hotTick': 0 },\r\n  { 'rank': 9, 'mana': 560, 'level': 56, 'castTime': 3, 'min': 1388, 'max': 1583, 'hotTick': 0 },\r\n  { 'rank': 10, 'mana': 620, 'level': 60, 'castTime': 3, 'min': 1619, 'max': 1850, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const lesserHealingWave = {\r\n  name: 'Lesser Healing Wave',\r\n  description: 'Heals a friendly target.',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 105, 'level': 20, 'castTime': 1.5, 'min': 170, 'max': 195, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 145, 'level': 28, 'castTime': 1.5, 'min': 257, 'max': 292, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 185, 'level': 36, 'castTime': 1.5, 'min': 349, 'max': 394, 'hotTick': 0 },\r\n  { 'rank': 4, 'mana': 235, 'level': 44, 'castTime': 1.5, 'min': 472, 'max': 529, 'hotTick': 0 },\r\n  { 'rank': 5, 'mana': 305, 'level': 52, 'castTime': 1.5, 'min': 648, 'max': 723, 'hotTick': 0 },\r\n  { 'rank': 6, 'mana': 380, 'level': 60, 'castTime': 1.5, 'min': 831, 'max': 928, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const chainHeal = {\r\n  name: 'Chain Heal',\r\n  description: 'Heals the friendly target, then jumps to heal additional nearby targets. If cast on a party member, the heal will only jump to other party members. Each jump is 50% as effective as the previous target. Heals 3 total targets.',\r\n  direct: true,\r\n  hot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 260, 'level': 40, 'castTime': 2.5, 'min': 332, 'max': 381, 'hotTick': 0 },\r\n  { 'rank': 2, 'mana': 315, 'level': 46, 'castTime': 2.5, 'min': 418, 'max': 479, 'hotTick': 0 },\r\n  { 'rank': 3, 'mana': 405, 'level': 54, 'castTime': 2.5, 'min': 567, 'max': 646, 'hotTick': 0 },\r\n  ],\r\n};\r\n\r\nexport const shadowBolt = {\r\n  name: 'Shadow Bolt',\r\n  description: 'Sends a shadowy bolt at the enemy, causing Shadow damage.',\r\n  direct: true,\r\n  dot: false,\r\n  ranks: [\r\n  { 'rank': 1, 'mana': 25, 'level': 1, 'castTime': 1.7, 'min': 13, 'max': 18, 'dot': 0 },\r\n  { 'rank': 2, 'mana': 40, 'level': 6, 'castTime': 2.2, 'min': 25, 'max': 32, 'dot': 0 },\r\n  { 'rank': 3, 'mana': 70, 'level': 12, 'castTime': 2.8, 'min': 52, 'max': 61, 'dot': 0 },\r\n  { 'rank': 4, 'mana': 110, 'level': 20, 'castTime': 3, 'min': 91, 'max': 104, 'dot': 0 },\r\n  { 'rank': 5, 'mana': 160, 'level': 28, 'castTime': 3, 'min': 149, 'max': 170, 'dot': 0 },\r\n  { 'rank': 6, 'mana': 210, 'level': 36, 'castTime': 3, 'min': 213, 'max': 240, 'dot': 0 },\r\n  { 'rank': 7, 'mana': 265, 'level': 44, 'castTime': 3, 'min': 292, 'max': 327, 'dot': 0 },\r\n  { 'rank': 8, 'mana': 315, 'level': 52, 'castTime': 3, 'min': 372, 'max': 415, 'dot': 0 },\r\n  { 'rank': 9, 'mana': 370, 'level': 60, 'castTime': 3, 'min': 454, 'max': 507, 'dot': 0 },\r\n  { 'rank': 10, 'mana': 380, 'level': 60, 'castTime': 3, 'min': 481, 'max': 538, 'dot': 0 },\r\n  ],\r\n};\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport HealingContainer from './HealingContainer';\r\nimport * as talents from './talents';\r\nimport * as spells from './spells';\r\nimport '../style.css';\r\n\r\nclass healingTouch extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      healing: 1500,\r\n      crit: 15,\r\n      spirit: 400,\r\n      improvedHealingTouch: true,\r\n      tranquilSpirit: true,\r\n      giftOfNature: true,\r\n      empoweredTouch: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HealingContainer\r\n        spell={ spells.healingTouch }\r\n        talents={ [\r\n          talents.improvedHealingTouch,\r\n          talents.empoweredTouch,\r\n          talents.giftOfNature,\r\n          talents.tranquilSpirit,\r\n          talents.moonglow,\r\n          talents.naturesGrace,\r\n          talents.naturalPerfection,\r\n          // talents.treeOfLifeAura,\r\n          talents.treeOfLifeForm,\r\n          talents.amplifyMagic,\r\n          talents.t3Druid4set,\r\n          talents.t3Druid8set,\r\n          talents.idolOfHealth,\r\n          talents.idolOfLongevity,\r\n        ] }\r\n        formValues={ this.props.formValues }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('healingTouch')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nhealingTouch.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'healingTouch' })(connect(mapStateToProps, mapDispatchToProps)(healingTouch));\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport HealingContainer from './HealingContainer';\r\nimport * as talents from './talents';\r\nimport * as spells from './spells';\r\nimport '../style.css';\r\n\r\nclass rejuvenation extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      healing: 1000,\r\n      crit: 10,\r\n      spirit: 284,\r\n      improvedRejuvenation: true,\r\n      empoweredRejuvenation: true,\r\n      tranquilSpirit: false,\r\n      giftOfNature: true,\r\n      treeOfLifeForm: false,\r\n      treeOfLifeAura: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HealingContainer\r\n        spell={ spells.rejuvenation }\r\n        talents={ [\r\n          talents.improvedRejuvenation,\r\n          talents.giftOfNature,\r\n          talents.moonglow,\r\n          talents.amplifyMagic,\r\n          talents.t2Druid8set,\r\n          talents.t3Druid4set,\r\n          talents.empoweredRejuvenation,\r\n          talents.treeOfLifeForm,\r\n          talents.treeOfLifeAura,\r\n        ] }\r\n        formValues={ this.props.formValues }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('rejuvenation')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nrejuvenation.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'rejuvenation' })(connect(mapStateToProps, mapDispatchToProps)(rejuvenation));\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport HealingContainer from './HealingContainer';\r\nimport * as talents from './talents';\r\nimport * as spells from './spells';\r\nimport '../style.css';\r\n\r\nclass regrowth extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      healing: 1500,\r\n      crit: 15,\r\n      spirit: 400,\r\n      improvedRegrowth: true,\r\n      empoweredRejuvenation: true,\r\n      giftOfNature: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HealingContainer\r\n        spell={ spells.regrowth }\r\n        talents={ [\r\n          talents.improvedRegrowth,\r\n          talents.empoweredRejuvenation,\r\n          talents.giftOfNature,\r\n          talents.moonglow,\r\n          talents.naturesGrace,\r\n          talents.amplifyMagic,\r\n          talents.t3Druid4set,\r\n          // talents.treeOfLifeAura,\r\n          talents.treeOfLifeForm,\r\n          talents.naturalPerfection,\r\n          talents.t2Druid5set,\r\n        ] }\r\n        formValues={ this.props.formValues }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('regrowth')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nregrowth.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'regrowth' })(connect(mapStateToProps, mapDispatchToProps)(regrowth));\r\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass lifebloom extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 1500,\n      crit: 10,\n      int: 500,\n      spirit: 500,\n      lifebloomHoT: true,\n      lifebloomStacks: true,\n      // improvedRejuvenation: true,\n      // tranquilSpirit: true,\n      giftOfNature: true,\n      // empoweredRejuvenation: true,\n      // treeOfLifeForm: true,\n      // treeOfLifeAura: true,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.lifebloom }\n        talents={ [\n          talents.giftOfNature,\n          talents.empoweredRejuvenation,\n          talents.treeOfLifeForm,\n          // talents.treeOfLifeAura,\n          talents.moonglow,\n          talents.amplifyMagic,\n          // talents.t3Druid4set,\n          talents.idolOfTheEmeraldQueen,\n          talents.lifebloomStacks,\n          talents.lifebloomHoT,\n        ] }talentsH={ [\n          // talents.bloomTest,\n          // talents.bloomTest2,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('lifebloom')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nlifebloom.propTypes = propTypes;\n\nexport default reduxForm({ form: 'lifebloom' })(connect(mapStateToProps, mapDispatchToProps)(lifebloom));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass greaterHeal extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.greaterHeal }\n        talents={ [\n          talents.divineFury,\n          talents.improvedHealing,\n          talents.spiritualHealing,\n          talents.t2Priest8set,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('greaterHeal')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\ngreaterHeal.propTypes = propTypes;\n\nexport default reduxForm({ form: 'greaterHeal' })(connect(mapStateToProps, mapDispatchToProps)(greaterHeal));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass flashHeal extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.flashHeal }\n        talents={ [\n          talents.spiritualHealing,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('flashHeal')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nflashHeal.propTypes = propTypes;\n\nexport default reduxForm({ form: 'flashHeal' })(connect(mapStateToProps, mapDispatchToProps)(flashHeal));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass renew extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.renew }\n        talents={ [\n          talents.improvedRenew,\n          talents.mentalAgility,\n          talents.spiritualHealing,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('renew')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nrenew.propTypes = propTypes;\n\nexport default reduxForm({ form: 'renew' })(connect(mapStateToProps, mapDispatchToProps)(renew));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass flashOfLight extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.flashOfLight }\n        talents={ [\n          talents.healingLight,\n          talents.illumination,\n          talents.blessingOfLight,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('flashOfLight')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nflashOfLight.propTypes = propTypes;\n\nexport default reduxForm({ form: 'flashOfLight' })(connect(mapStateToProps, mapDispatchToProps)(flashOfLight));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass holyLight extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.holyLight }\n        talents={ [\n          talents.healingLight,\n          talents.illumination,\n          talents.blessingOfLight,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('holyLight')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nholyLight.propTypes = propTypes;\n\nexport default reduxForm({ form: 'holyLight' })(connect(mapStateToProps, mapDispatchToProps)(holyLight));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass holyNova extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.holyNova }\n        talents={ [\n          talents.mentalAgility,\n          talents.spiritualHealing,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('holyNova')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nholyNova.propTypes = propTypes;\n\nexport default reduxForm({ form: 'holyNova' })(connect(mapStateToProps, mapDispatchToProps)(holyNova));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass heal extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.heal }\n        talents={ [\n          talents.divineFury,\n          talents.improvedHealing,\n          talents.spiritualHealing,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('heal')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nheal.propTypes = propTypes;\n\nexport default reduxForm({ form: 'heal' })(connect(mapStateToProps, mapDispatchToProps)(heal));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass prayerOfHealing extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.prayerOfHealing }\n        talents={ [\n          talents.spiritualHealing,\n          talents.improvedPrayerOfHealing,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('prayerOfHealing')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nprayerOfHealing.propTypes = propTypes;\n\nexport default reduxForm({ form: 'prayerOfHealing' })(connect(mapStateToProps, mapDispatchToProps)(prayerOfHealing));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass lesserHealingWave extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.lesserHealingWave }\n        talents={ [\n          talents.tidalFocus,\n          talents.purification,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('lesserHealingWave')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nlesserHealingWave.propTypes = propTypes;\n\nexport default reduxForm({ form: 'lesserHealingWave' })(connect(mapStateToProps, mapDispatchToProps)(lesserHealingWave));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass healingWave extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.healingWave }\n        talents={ [\n          talents.improvedHealingWave,\n          talents.tidalFocus,\n          talents.healingWay,\n          talents.purification,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('healingWave')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nhealingWave.propTypes = propTypes;\n\nexport default reduxForm({ form: 'healingWave' })(connect(mapStateToProps, mapDispatchToProps)(healingWave));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass chainHeal extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 500,\n      crit: 15,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.chainHeal }\n        talents={ [\n          talents.tidalFocus,\n          talents.purification,\n          talents.amplifyMagic,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('chainHeal')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nchainHeal.propTypes = propTypes;\n\nexport default reduxForm({ form: 'chainHeal' })(connect(mapStateToProps, mapDispatchToProps)(chainHeal));\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class NotFoundPage extends Component {\n  render() {\n    return (\n      <div className='column row'>\n        <h1>Not Found</h1>\n        <NavLink\n          exact\n          to='/'\n        >\n          Home\n        </NavLink>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { NavLink } from 'react-router-dom';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n// import { routeCodes } from '../../views/App';\n\nconst resistancesView = ({\n  resistancesTable,\n  resistances,\n}) => (\n  <div>\n    <div>\n      <div className='row columns'>\n        <nav aria-label='You are here:'>\n          <ul className='breadcrumbs'>\n            <li><NavLink to=\"/\">Home</NavLink></li>\n            <li><span className='show-for-sr'>Current:</span> Resistances</li>\n          </ul>\n        </nav>\n      </div>\n      <div className='row'>\n        <h3>Resistances</h3>\n      </div>\n      <div className='row'>\n        <div className='medium-8 large-7 columns'>\n          <ResponsiveContainer aspect={ 2 } >\n            <ComposedChart data={ resistancesTable } margin={ { top: 10, right: 0, left: 0, bottom: 0 } } >\n              <Line dataKey='effectiveHealth' stroke='green' isAnimationActive={ false } dot={ false } />\n              <Line dataKey='reduction %' yAxisId='1' stroke='blue' isAnimationActive={ false } dot={ false } />\n              <XAxis dataKey='resistance' />\n              <YAxis />\n              <YAxis yAxisId='1' orientation='right' />\n              <Legend />\n              <Tooltip isAnimationActive={ false } />\n              <CartesianGrid strokeDasharray='3 3' />\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n        <div className='medium-4 large-5 columns'>\n          <div className='row'>\n            <div className='large-6 columns'>\n              <label htmlFor='health'>Health\n                <Field name='health' component='input' type='number' min='0' max='25000' />\n              </label>\n            </div>\n            <div className='large-6 columns'>\n              <label htmlFor='resistance'>Resistance\n                <Field name='resistance' component='input' type='number' min='0' max='315' />\n              </label>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='column large-12'>\n              <table>\n                <tbody>\n                  <tr>\n                    <th>Damage Reduction</th>\n                    <td>{resistances.damageReduction}%</td>\n                  </tr>\n                  <tr>\n                    <th>Effective Health</th>\n                    <td>{resistances.effectiveHealth}</td>\n                  </tr>\n                  <tr>\n                    <th>Value of Stamina</th>\n                    <td>{resistances.valueOfTenHealth}</td>\n                  </tr>\n                  <tr>\n                    <th>Value of Resistance</th>\n                    <td>{resistances.valueofOneResist}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nresistancesView.propTypes = {\n  resistancesTable: PropTypes.arrayOf(PropTypes.any),\n  resistances: PropTypes.any,\n};\n\nexport default resistancesView;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport ResistancesView from './ResistancesView';\n//import '../style.css';\n\nclass ResistancesContainer extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      health: 5000,\n      resistance: 10,\n    });\n  }\n\n  computeResistanceTable() {\n    const health = +this.props.formValues.health;\n    const resistances = [];\n    for (let resistance = 0; resistance <= 315; resistance += 5) {\n      const reduction = (resistance / 315) * 0.75;\n      resistances.push({\n        resistance,\n        'reduction %': +(reduction * 100).toFixed(2),\n        effectiveHealth: Math.round(health / (1 - reduction)),\n      });\n    }\n    return resistances;\n  }\n\n  computeResistance() {\n    const resistance = +this.props.formValues.resistance;\n    const baseHealth = +this.props.formValues.health;\n\n    const effectiveHealth = baseHealth / (1 - ((resistance / 315) * 0.75));\n    const damageReduction = ((resistance / 315) * 75).toFixed(2);\n    const effectiveHealthWithTenMoreHealth = (baseHealth + 10) / (1 - ((resistance / 315) * 0.75));\n    const effectiveHealthWithOneMoreResistance = baseHealth / (1 - (((resistance + 1) / 315) * 0.75));\n    const valueOfTenHealth = (effectiveHealthWithTenMoreHealth - effectiveHealth).toFixed(2);\n    const valueofOneResist = (effectiveHealthWithOneMoreResistance - effectiveHealth).toFixed(2);\n\n    return {\n      resistance,\n      baseHealth: Math.round(baseHealth),\n      damageReduction,\n      effectiveHealth: Math.round(effectiveHealth) || 0,\n      valueOfTenHealth,\n      valueofOneResist,\n    };\n  }\n\n  render() {\n    return (\n      <ResistancesView\n        formValues={ this.props.formValues }\n        resistancesTable={ this.computeResistanceTable() }\n        resistances={ this.computeResistance() }\n      />\n    );\n  }\n}\n\nResistancesContainer.defaultProps = {\n  formValues: {},\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('ResistancesContainer')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nResistancesContainer.propTypes = propTypes;\n\nexport default reduxForm({ form: 'ResistancesContainer' })(connect(mapStateToProps, mapDispatchToProps)(ResistancesContainer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { NavLink } from 'react-router-dom';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n// import { routeCodes } from '../../views/App';\n\nconst armorView = ({\n  armorTable,\n  armor,\n}) => (\n  <div>\n    <div>\n      <div className='row columns'>\n        <nav aria-label='You are here:'>\n          <ul className='breadcrumbs'>\n            <li><NavLink to=\"/\">Home</NavLink></li>\n            <li><span className='show-for-sr'>Current:</span> Armor</li>\n          </ul>\n        </nav>\n      </div>\n      <div className='row'>\n        <h3>Armor</h3>\n      </div>\n      <div className='row'>\n        <div className='medium-8 large-7 columns'>\n          <ResponsiveContainer aspect={ 2 } >\n            <ComposedChart data={ armorTable } margin={ { top: 10, right: 0, left: 0, bottom: 0 } } >\n              <Line dataKey='effectiveHealth' stroke='green' isAnimationActive={ false } dot={ false } />\n              <Line dataKey='reduction %' yAxisId='1' stroke='blue' isAnimationActive={ false } dot={ false } />\n              <XAxis dataKey='armor' />\n              <YAxis />\n              <YAxis yAxisId='1' orientation='right' />\n              <Legend />\n              <Tooltip isAnimationActive={ false } />\n              <CartesianGrid strokeDasharray='3 3' />\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n        <div className='medium-4 large-5 columns'>\n          <div className='row'>\n            <div className='large-6 columns'>\n              <label htmlFor='health'>Health\n                <Field name='health' component='input' type='number' min='0' max='25000' />\n              </label>\n            </div>\n            <div className='large-6 columns'>\n              <label htmlFor='armor'>Armor\n                <Field name='armor' component='input' type='number' min='0' max='99999' />\n              </label>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='large-6 columns'>\n              <label htmlFor='attackerLevel'>Attacker Level\n                <Field name='attackerLevel' component='input' type='number' min='1' max='63' />\n              </label>\n            </div>\n            <div className='large-6 columns'>\n              <label htmlFor='targetLevel'>Target Level\n                <Field name='targetLevel' component='input' type='number' min='1' max='63' />\n              </label>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='column large-12'>\n              <table>\n                <tbody>\n                  <tr>\n                    <th>Damage Reduction</th>\n                    <td>{armor.damageReduction}%</td>\n                  </tr>\n                  <tr>\n                    <th>Effective Health</th>\n                    <td>{armor.effectiveHealth}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\narmorView.propTypes = {\n  armorTable: PropTypes.arrayOf(PropTypes.any),\n  armor: PropTypes.any,\n};\n\nexport default armorView;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport ArmorView from './ArmorView';\n//import '../style.css';\n\nclass ArmorContainer extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      health: 7500,\n      resistance: 10,\n      armor: 10000,\n      attackerLevel: 63,\n      targetLevel: 60,\n    });\n  }\n\n  computeArmorTable() {\n    const health = +this.props.formValues.health;\n    const attackerLevel = +this.props.formValues.attackerLevel;\n    const targetLevel = +this.props.formValues.targetLevel;\n    const armorTable = [];\n    for (let armor = 0; armor <= 17500; armor += 100) {\n      const reduction = this.computeDamageReduction(armor, attackerLevel, targetLevel);\n      armorTable.push({\n        armor,\n        'reduction %': +(reduction * 100).toFixed(2),\n        effectiveHealth: Math.round(health / (1 - reduction)),\n      });\n    }\n    return armorTable;\n  }\n\n  computeDamageReduction(armor, attackerLevel, targetLevel) {\n    return Math.min(\n      armor / (armor + 400 + 85 * attackerLevel),\n      0.75);\n  }\n\n  computeArmor() {\n    const armor = +this.props.formValues.armor;\n    const baseHealth = +this.props.formValues.health;\n    const attackerLevel = +this.props.formValues.attackerLevel;\n    const targetLevel = +this.props.formValues.targetLevel;\n\n    const damageReduction = this.computeDamageReduction(armor, attackerLevel, targetLevel);\n    const effectiveHealth = baseHealth / (1 - (damageReduction));\n\n    return {\n      baseHealth: Math.round(baseHealth),\n      damageReduction: (damageReduction * 100).toFixed(2),\n      effectiveHealth: Math.round(effectiveHealth) || 0,\n    };\n  }\n\n  render() {\n    return (\n      <ArmorView\n        formValues={ this.props.formValues }\n        armorTable={ this.computeArmorTable() }\n        armor={ this.computeArmor() }\n      />\n    );\n  }\n}\n\nArmorContainer.defaultProps = {\n  formValues: {},\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('ArmorContainer')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nArmorContainer.propTypes = propTypes;\n\nexport default reduxForm({ form: 'ArmorContainer' })(connect(mapStateToProps, mapDispatchToProps)(ArmorContainer));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field } from 'redux-form';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst regenerationView = ({\r\n  regen,\r\n}) => (\r\n  <div>\r\n    <div>\r\n      <div className='row columns'>\r\n        <nav aria-label='You are here:'>\r\n          <ul className='breadcrumbs'>\r\n            <li><NavLink to=\"/\">Home</NavLink></li>\r\n            <li><span className='show-for-sr'>Current:</span> Regeneration</li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <div className='row'>\r\n        <h3>Regeneration</h3>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='large-4 medium-6 columns'>\r\n          <label htmlFor='class'>Class\r\n            <Field name='class' component='select'>\r\n              <option value=\"\"></option>\r\n              <option value=\"druid\">druid</option>\r\n              {/* <option value=\"hunter\">Hunter</option>\r\n              <option value=\"mage\">Mage</option>\r\n              <option value=\"paladin\">Paladin</option>\r\n              <option value=\"priest\">Priest</option>\r\n              <option value=\"rogue\">Rogue</option>\r\n              <option value=\"shaman\">Shaman</option>\r\n              <option value=\"warlock\">Warlock</option>\r\n              <option value=\"warrior\">Warrior</option> */}\r\n            </Field>\r\n          </label>\r\n          <label htmlFor='spirit'>Spirit\r\n            <Field name='spirit' component='input' type='number' min='1' max='999' />\r\n          </label>\r\n          <label htmlFor='intellect'>Intellect\r\n            <Field name='intellect' component='input' type='number' min='1' max='999' />\r\n          </label>\r\n          <label htmlFor='combatManaRegen'>Combat Mana Regen %\r\n            <Field name='combatManaRegen' component='input' type='number' min='0' max='100' />\r\n          </label>\r\n        </div>\r\n        <div className='large-4 medium-6 end columns'>\r\n          <table>\r\n            <tbody>\r\n             <tr>\r\n                <th>Mana Regen OOC(MP5)</th>\r\n                <td>{regen.outOfCombat}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>In Combat (MP5)</th>\r\n                <td>{regen.inCombat}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Mana gained during Innervate</th>\r\n                <td>{regen.innervate}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nregenerationView.propTypes = {\r\n  regenTable: PropTypes.arrayOf(PropTypes.any),\r\n  regen: PropTypes.any,\r\n};\r\n\r\nexport default regenerationView;\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport RegenView from './RegenView';\r\n\r\nclass RegenContainer extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      class: 'druid',\r\n      intellect: 200,\r\n      spirit: 200,\r\n      combatManaRegen: 30,\r\n    });\r\n  }\r\n\r\n  computeRegen() {\r\n    const intellect = +this.props.formValues.intellect;\r\n    const spirit = +this.props.formValues.spirit;\r\n    const combatManaRegen = +this.props.formValues.combatManaRegen;\r\n\r\n    // math\r\n    //Formulas for mana regeneration based on spirit:\r\n    let formula = undefined;\r\n    switch (this.props.formValues.class) {\r\n      case 'priest':\r\n      case 'mage':\r\n        formula = (intellect, spirit) => 13 + (spirit / 4);\r\n        break;\r\n      case 'druid':\r\n        formula = (intellect, spirit) => (5 * 0.00932715221261 * Math.sqrt(intellect) * spirit);\r\n        break;\r\n      case 'shaman':\r\n      case 'paladin':\r\n      case 'hunter':\r\n        formula = (intellect, spirit) => 15 + (spirit / 5);\r\n        break;\r\n      case 'warlock':\r\n        formula = (intellect, spirit) => 8 + (spirit / 4);\r\n        break;\r\n      default:\r\n        formula = (intellect, spirit) => 0;\r\n        break;\r\n    }\r\n\r\n    const manaPerTick = formula(intellect, spirit);\r\n    const outOfCombat = manaPerTick * 1;\r\n    const innervate = 20 * (5-combatManaRegen*.01) * 0.00932715221261 * Math.sqrt(intellect) * spirit\r\n\r\n    return {\r\n      outOfCombat: (outOfCombat).toFixed(2),\r\n      inCombat: (outOfCombat * (combatManaRegen / 100)).toFixed(2),\r\n      innervate: (innervate).toFixed(2),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <RegenView\r\n        formValues={ this.props.formValues }\r\n        regen={ this.computeRegen() }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nRegenContainer.defaultProps = {\r\n  formValues: {},\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('RegenContainer')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nRegenContainer.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'RegenContainer' })(connect(mapStateToProps, mapDispatchToProps)(RegenContainer));\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { NavLink } from 'react-router-dom';\nimport {\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport './attackTable.css';\n\nconst COLORS = ['OrangeRed', 'purple', 'MediumBlue', 'teal', 'olive', 'black', 'gray'];\n\nconst AttackTableView = ({\n  attackTables\n}) => (\n    <div>\n      <div>\n        <div className='row columns'>\n          <nav aria-label='You are here:'>\n            <ul className='breadcrumbs'>\n              <li><NavLink to=\"/\">Home</NavLink></li>\n              <li><span className='show-for-sr'>Current:</span> Attack Table</li>\n            </ul>\n          </nav>\n        </div>\n        <div className='row'>\n          <h3>Attack Table</h3>\n        </div>\n        <div className='row'>\n          <div className='large-6 columns end'>\n            <div className='row'>\n              <div className='small-6 medium-4 columns'>\n                <label htmlFor='attackerLevel'>Player Level\n                <Field name='attackerLevel' component='input' type='number' min='1' max='60' />\n                </label>\n              </div>\n              <div className='small-6 medium-4 columns end'>\n                <label htmlFor='targetLevel'>Target Mob Level\n                <Field name='targetLevel' component='input' type='number' min='1' max='63' />\n                </label>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='small-4 columns'>\n                <label htmlFor='hit'>Hit %\n                <Field name='hit' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n              <div className='small-4 columns'>\n                <label htmlFor='crit'>Crit %\n                <Field name='crit' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n              <div className='small-4 columns end'>\n                <label htmlFor='skill'>Skill\n                <Field name='skill' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='columns'>\n            <div className='row'>\n              <div className='column large-12'>\n                <table className=\"combat-table\">\n                  <tbody>\n                    <tr>\n                      <th>\n                      </th>\n                      <th>\n                        <PieChart width={100} height={100}>\n                          <Pie nameKey=\"name\" dataKey=\"value\" isAnimationActive={false} data={attackTables.auto.pieChart} outerRadius={50}>\n                              { attackTables.auto.pieChart.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\n                          </Pie>\n                        </PieChart>\n                      </th>\n                      <th>\n                        <PieChart width={100} height={100}>\n                          <Pie nameKey=\"name\" dataKey=\"value\" isAnimationActive={false} data={attackTables.special.pieChart} outerRadius={50}>\n                              { attackTables.special.pieChart.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\n                          </Pie>\n                        </PieChart>\n                      </th>\n                      <th>\n                        <PieChart width={100} height={100}>\n                          <Pie nameKey=\"name\" dataKey=\"value\" isAnimationActive={false} data={attackTables.dual.pieChart} outerRadius={50}>\n                              { attackTables.dual.pieChart.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\n                          </Pie>\n                        </PieChart>\n                      </th>\n                    </tr>\n                    <tr className=\"\">\n                      <th></th>\n                      <td>Auto Attack</td>\n                      <td>Special Attack</td>\n                      <td>Dual Wield</td>\n                    </tr>\n                    <tr className=\"combat-table_miss\">\n                      <th>Miss</th>\n                      <td>{attackTables.auto.missChance}% {attackTables.auto.overHitCap > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.auto.overHitCap}% over hit cap)</span>\n                      )}</td>\n                      <td>{attackTables.special.missChance}% {attackTables.special.overHitCap > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.special.overHitCap}% over hit cap)</span>\n                      )}</td>\n                      <td>{attackTables.dual.missChance}% {attackTables.dual.overHitCap > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.dual.overHitCap}% over hit cap)</span>\n                      )}</td>\n                    </tr>\n                    <tr className=\"combat-table_dodge\">\n                      <th>Dodge</th>\n                      <td>{attackTables.auto.dodgeChance}%</td>\n                      <td>{attackTables.special.dodgeChance}%</td>\n                      <td>{attackTables.dual.dodgeChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_parry\">\n                      <th>\n                      <Field name='hasParry' id='hasParry' component='input' type='checkbox' /> Parry*\n                      </th>\n                      <td>{attackTables.auto.parryChance}%</td>\n                      <td>{attackTables.special.parryChance}%</td>\n                      <td>{attackTables.dual.parryChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_block\">\n                      <th>\n                      <Field name='hasBlock' id='hasBlock' component='input' type='checkbox' /> Block\n                      </th>\n                      <td>{attackTables.auto.blockChance}%</td>\n                      <td>{attackTables.special.blockChance}%</td>\n                      <td>{attackTables.dual.blockChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_glancing\">\n                      <th>Glancing</th>\n                      <td>{attackTables.auto.glancingChance}% {attackTables.auto.glancingChance > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.auto.glancingPenalty}% penalty)</span>\n                      )}</td>\n                      <td>{attackTables.special.glancingChance}% {attackTables.special.glancingChance > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.special.glancingPenalty}% penalty)</span>\n                      )}</td>\n                      <td>{attackTables.dual.glancingChance}% {attackTables.dual.glancingChance > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.dual.glancingPenalty}% penalty)</span>\n                      )}</td>\n                    </tr>\n                    <tr className=\"combat-table_crit\">\n                      <th>Crit</th>\n                      <td>{attackTables.auto.critChance}% {attackTables.auto.overCritCap > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.auto.overCritCap}% over)</span>\n                      )}</td>\n                      <td>{attackTables.special.critChance}% {attackTables.special.overCri > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.special.overCritCap}% over)</span>\n                      )}</td>\n                      <td>{attackTables.dual.critChance}% {attackTables.dual.overCritCap > 0 && (\n                        <span className=\"combat-table_note\">({attackTables.dual.overCritCap}% over)</span>\n                      )}</td>\n                    </tr>\n                    <tr className=\"combat-table_hit\">\n                      <th>Hit</th>\n                      <td>{attackTables.auto.hitChance}%</td>\n                      <td>{attackTables.special.hitChance}%</td>\n                      <td>{attackTables.dual.hitChance}%</td>\n                    </tr>\n                    <tr>\n                      <th>Overall</th>\n                      <th>{attackTables.auto.overall}% damage</th>\n                      <th>{attackTables.special.overall}% damage</th>\n                      <th>{attackTables.dual.overall}% damage</th>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n    <hr />\n    <p>* Parry formula is still being determined.</p>\n    <p>sources</p>\n    <ul>\n      <li>\n        <a href=\"https://github.com/magey/classic-warrior/wiki/Attack-table\">https://github.com/magey/classic-warrior/wiki/Attack-table</a>\n      </li>\n      <li>\n        <a href=\"https://vanilla-wow.fandom.com/wiki/Dual_wield\">https://vanilla-wow.fandom.com/wiki/Dual_wield</a>\n      </li>\n    </ul>\n      </div>\n    </div>\n  );\n\nAttackTableView.propTypes = {\n  armorTable: PropTypes.arrayOf(PropTypes.any),\n  armor: PropTypes.any,\n};\n\nexport default AttackTableView;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport AttackTableView from './AttackTableView';\n\nclass AttackTableContainer extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      skill: 300,\n      hit: 5,\n      crit: 10,\n      attackerLevel: 60,\n      targetLevel: 63,\n      hasParry: true,\n      hasBlock: false,\n    });\n  }\n\n  /**\n   * Puts the number in a range of zero to one hundred.\n   *\n   * @param {number} number - The number.\n   */\n  normalize(number) {\n    return Math.max(Math.min(number, 100), 0);\n  }\n\n  computeChances(attackType = 'auto') {\n\n    // https://github.com/magey/classic-warrior/wiki/Attack-table\n    // https://web.archive.org/web/20070222175829/http://forums.wow-europe.com/thread.html?topicId=166546791&pageNo=1&sid=1\n\n    const skill = +this.props.formValues.skill;\n    const hit = +this.props.formValues.hit;\n    const crit = +this.props.formValues.crit;\n    const attackerLevel = +this.props.formValues.attackerLevel;\n    const targetLevel = +this.props.formValues.targetLevel;\n    const hasParry = !!this.props.formValues.hasParry;\n    const hasBlock = !!this.props.formValues.hasBlock;\n    const defense = targetLevel * 5;\n    const baseWeaponSkill = Math.min(300, skill);\n\n    let missChance = 0.0;\n    if (defense - skill > 10) {\n      missChance += 5 + (targetLevel * 5 - skill) * 0.2;\n    } else {\n      missChance += 5 + (targetLevel * 5 - skill) * 0.1;\n    }\n    // low level bonus\n    missChance *= (Math.min(10, targetLevel) / 10); // Note, unsure if this affects dual weild... but you can't duel wield < lvl 10\n\n    // New science says DualWieldMissChance = NormalMissChance * 0.8 + 20%\n    if (attackType === 'dual') {\n      missChance = (missChance * 0.8) + 20;\n    }\n\n    // Skill difference penalty\n    if (defense - skill > 10 && hit >= 1) {\n      missChance -= (hit - 1);\n    } else {\n      missChance -= hit;\n    }\n\n    const bossParryBonus = targetLevel === 63 ? 12.5 : 5.0; // ? no idea if this is real but it's close to the test numbers\n\n    const dodgeChance = Math.max(5 + (targetLevel * 5 - skill) * 0.1, 0);\n    const critChance = crit + (baseWeaponSkill - defense) * (baseWeaponSkill - defense < 0 ? 0.2 : 0.4) - 1.8;\n    const parryChance = hasParry ? Math.max(((defense - skill) * 0.1) + bossParryBonus, 0) : 0.0\n    const blockChance = hasBlock ? Math.min(5.0, 5 + (targetLevel * 5 - skill) * 0.1) : 0.0;\n    const glancingChance = attackType === 'special' ? 0.0 : 10 + (targetLevel * 5 - Math.min(attackerLevel * 5, skill)) * 2.0;\n    const lowend = Math.min(1.3 - 0.05*(defense - skill), 0.91);\n    const highend = Math.max(Math.min(1.2 - 0.03*(defense - skill), 0.99), 0.2);\n    const glancingPenalty = attackType === 'special' ? 0.0 : (1 - ((lowend + highend) / 2)) * 100;\n\n    return {\n      critChance,\n      dodgeChance,\n      missChance,\n      parryChance,\n      blockChance,\n      glancingChance,\n      glancingPenalty,\n    }\n  }\n\n  computeAttackTable({\n    critChance,\n    dodgeChance,\n    missChance,\n    parryChance,\n    blockChance,\n    glancingChance,\n    glancingPenalty,\n  }) {\n\n    let remaining = 100.0;\n    const miss = this.normalize(missChance);\n    remaining -= miss;\n\n    const dodge = Math.min(this.normalize(dodgeChance), remaining);\n    remaining -= dodge;\n\n    const parry = Math.min(this.normalize(parryChance), remaining);\n    remaining -= parry;\n\n    const block = Math.min(this.normalize(blockChance), remaining);\n    remaining -= block;\n\n    const glancing = Math.min(this.normalize(glancingChance), remaining);\n    remaining -= glancing;\n\n    const crit = Math.min(this.normalize(critChance), remaining);\n    remaining -= crit;\n\n    const hit = remaining;\n\n    const overHitCap = this.normalize(missChance * -1);\n    const overCritCap = this.normalize(critChance - crit);\n    const overall = +hit + (2.0 * crit) + (glancing * (1 - (glancingPenalty / 100)));\n\n    return {\n      hitChance: hit.toFixed(2),\n      critChance: crit.toFixed(2),\n      dodgeChance: dodge.toFixed(2),\n      missChance: miss.toFixed(2),\n      parryChance: parry.toFixed(2),\n      blockChance: block.toFixed(2),\n      glancingChance: glancing.toFixed(2),\n      glancingPenalty: glancingPenalty.toFixed(0),\n      overHitCap: overHitCap.toFixed(2),\n      overCritCap: overCritCap.toFixed(2),\n      overall: overall.toFixed(2),\n      pieChart: [\n        { name: 'Miss', value: miss },\n        { name: 'Dodge', value: dodge },\n        { name: 'Parry', value: parry },\n        { name: 'Block', value: block },\n        { name: 'Glancing', value: glancing },\n        { name: 'Crit', value: crit },\n        { name: 'Hit', value: hit },\n      ],\n    }\n  }\n\n  computeAttackTables() {\n    return {\n      auto: this.computeAttackTable(this.computeChances('auto')),\n      special: this.computeAttackTable(this.computeChances('special')),\n      dual: this.computeAttackTable(this.computeChances('dual')),\n    };\n  };\n\n  render() {\n    return (\n      <AttackTableView\n        formValues={ this.props.formValues }\n        attackTables={ this.computeAttackTables() }\n      />\n    );\n  }\n}\n\nAttackTableContainer.defaultProps = {\n  formValues: {},\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('AttackTableContainer')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nAttackTableContainer.propTypes = propTypes;\n\nexport default reduxForm({ form: 'AttackTableContainer' })(connect(mapStateToProps, mapDispatchToProps)(AttackTableContainer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport { NavLink } from 'react-router-dom';\nimport {\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport './defenseTable.css';\n\nconst COLORS = ['OrangeRed', 'purple', 'MediumBlue', 'teal', 'olive', 'black', 'gray'];\n\nconst DefenseTableView = ({\n  defenseTables\n}) => (\n    <div>\n      <div>\n        <div className='row columns'>\n          <nav aria-label='You are here:'>\n            <ul className='breadcrumbs'>\n              <li><NavLink to=\"/\">Home</NavLink></li>\n              <li><span className='show-for-sr'>Current:</span> Defense Table</li>\n            </ul>\n          </nav>\n        </div>\n        <div className='row'>\n          <h3>Defense Table</h3>\n          <h2>Work In Progress!</h2>\n        </div>\n        <div className='row'>\n          <div className='large-6 columns end'>\n            <div className='row'>\n              <div className='small-6 medium-4 columns'>\n                <label htmlFor='playerLevel'>Player Level\n                <Field name='playerLevel' component='input' type='number' min='1' max='60' />\n                </label>\n              </div>\n              <div className='small-6 medium-4 columns end'>\n                <label htmlFor='mobLevel'>Mob Level\n                <Field name='mobLevel' component='input' type='number' min='1' max='63' />\n                </label>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='small-3 columns'>\n                <label htmlFor='skill'>Defense\n                <Field name='skill' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n              <div className='small-3 columns'>\n                <label htmlFor='plusBlock'>+Block\n                <Field name='plusBlock' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n              <div className='small-3 columns'>\n                <label htmlFor='plusDodge'>+Dodge\n                <Field name='plusDodge' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n              <div className='small-3 columns'>\n                <label htmlFor='plusParry'>+Parry\n                <Field name='plusParry' component='input' type='number' min='0' max='999' />\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='columns'>\n            <div className='row'>\n              <div className='column large-12'>\n                <table className=\"combat-table\">\n                  <tbody>\n                    <tr>\n                      <th>\n                      </th>\n                      <th>\n                        <PieChart width={100} height={100}>\n                          <Pie nameKey=\"name\" dataKey=\"value\" isAnimationActive={false} data={defenseTables.auto.pieChart} outerRadius={50}>\n                              { defenseTables.auto.pieChart.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\n                          </Pie>\n                        </PieChart>\n                      </th>\n                      <th>\n                        <PieChart width={100} height={100}>\n                          <Pie nameKey=\"name\" dataKey=\"value\" isAnimationActive={false} data={defenseTables.special.pieChart} outerRadius={50}>\n                              { defenseTables.special.pieChart.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\n                          </Pie>\n                        </PieChart>\n                      </th>\n                    </tr>\n                    <tr className=\"\">\n                      <th></th>\n                      <td>Auto Attack</td>\n                      <td>Special Attack</td>\n                    </tr>\n                    <tr className=\"combat-table_miss\">\n                      <th>Miss</th>\n                      <td>{defenseTables.auto.missChance}%</td>\n                      <td>{defenseTables.special.missChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_dodge\">\n                      <th>Dodge</th>\n                      <td>{defenseTables.auto.dodgeChance}%</td>\n                      <td>{defenseTables.special.dodgeChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_parry\">\n                      <th>\n                      <Field name='hasParry' id='hasParry' component='input' type='checkbox' /> Parry\n                      </th>\n                      <td>{defenseTables.auto.parryChance}%</td>\n                      <td>{defenseTables.special.parryChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_block\">\n                      <th>\n                      <Field name='hasBlock' id='hasBlock' component='input' type='checkbox' /> Block\n                      </th>\n                      <td>{defenseTables.auto.blockChance}%</td>\n                      <td>{defenseTables.special.blockChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_glancing\">\n                      <th>Crushing</th>\n                      <td>{defenseTables.auto.crushingChance}% {defenseTables.auto.crushingChance > 0 && (\n                        <span className=\"combat-table_note\">(150% damage)</span>\n                      )}</td>\n                      <td>{defenseTables.auto.crushingChance}% {defenseTables.auto.crushingChance > 0 && (\n                        <span className=\"combat-table_note\">(150% damage)</span>\n                      )}</td>\n                    </tr>\n                    <tr className=\"combat-table_crit\">\n                      <th>Crit</th>\n                      <td>{defenseTables.auto.critChance}% {defenseTables.auto.critChance > 0 && (\n                        <span className=\"combat-table_note\">(200% damage)</span>\n                      )}</td>\n                      <td>{defenseTables.special.critChance}%</td>\n                    </tr>\n                    <tr className=\"combat-table_hit\">\n                      <th>Hit</th>\n                      <td>{defenseTables.auto.hitChance}%</td>\n                      <td>{defenseTables.special.hitChance}%</td>\n                    </tr>\n                    <tr>\n                      <th>Overall*</th>\n                      <th>{defenseTables.auto.overall}% damage</th>\n                      <th>{defenseTables.special.overall}% damage</th>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n    <hr />\n    <p>* Assumes a block reduces damage by 10% which is a very rough guess at boss damage reduction.</p>\n    <p>sources</p>\n    <ul>\n      <li>\n        <a href=\"https://vanilla-wow.fandom.com/wiki/Parry\">https://vanilla-wow.fandom.com/wiki/Parry</a>\n      </li>\n      <li>\n        <a href=\"https://vanilla-wow.fandom.com/wiki/Block\">https://vanilla-wow.fandom.com/wiki/Block</a>\n      </li>\n      <li>\n        <a href=\"https://vanilla-wow.fandom.com/wiki/Dodge\">https://vanilla-wow.fandom.com/wiki/Dodge</a>\n      </li>\n      <li>\n        <a href=\"https://vanilla-wow.fandom.com/wiki/Miss\">https://vanilla-wow.fandom.com/wiki/Miss</a>\n      </li>\n    </ul>\n      </div>\n    </div>\n  );\n\nDefenseTableView.propTypes = {\n  armorTable: PropTypes.arrayOf(PropTypes.any),\n  armor: PropTypes.any,\n};\n\nexport default DefenseTableView;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport DefenseTableView from './defenseTableView';\n\nclass DefenseTableContainer extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      skill: 300,\n      plusBlock: 0,\n      plusDodge: 0,\n      plusParry: 0,\n      hasParry: true,\n      hasBlock: true,\n      playerLevel: 60,\n      mobLevel: 63,\n    });\n  }\n\n  /**\n   * Puts the number in a range of zero to one hundred.\n   *\n   * @param {number} number - The number.\n   */\n  normalize(number) {\n    return Math.max(Math.min(number, 100), 0);\n  }\n\n  computeChances(attackType = 'auto') {\n\n    const skill = +this.props.formValues.skill;\n    const plusBlock = +this.props.formValues.plusBlock;\n    const plusDodge = +this.props.formValues.plusDodge;\n    const plusParry = +this.props.formValues.plusParry;\n    // const playerLevel = +this.props.formValues.playerLevel;\n    const mobLevel = +this.props.formValues.mobLevel;\n    const hasParry = !!this.props.formValues.hasParry;\n    const hasBlock = !!this.props.formValues.hasBlock;\n    const mobSkill = mobLevel * 5;\n    const baseDefenseSkill = Math.min(300, skill);    \n\n    const skillDifference = skill - mobSkill;\n    const baseSkillDifference = mobSkill - baseDefenseSkill;\n\n    const missChance = 5 + skillDifference * 0.04;\n    const dodgeChance = 5 + plusDodge + skillDifference * 0.04;\n    const parryChance = hasParry ? 5 + plusParry + skillDifference * 0.04 : 0;\n    const blockChance = hasBlock ? 5 + plusBlock + skillDifference * 0.04 : 0;\n    const critChance = attackType === 'special' ? 0 : 5 - skillDifference * 0.04\n    const crushingChance = baseSkillDifference >= 15 && attackType === 'auto' ? (baseSkillDifference * 2) - 15 : 0;\n\n    return {\n      critChance,\n      dodgeChance,\n      missChance,\n      parryChance,\n      blockChance,\n      crushingChance,\n    }\n  }\n\n  computeDefenseTable({\n    critChance,\n    dodgeChance,\n    missChance,\n    parryChance,\n    blockChance,\n    crushingChance,\n  }) {\n\n    let remaining = 100.0;\n    const miss = this.normalize(missChance);\n    remaining -= miss;\n\n    const dodge = Math.min(this.normalize(dodgeChance), remaining);\n    remaining -= dodge;\n\n    const parry = Math.min(this.normalize(parryChance), remaining);\n    remaining -= parry;\n\n    const block = Math.min(this.normalize(blockChance), remaining);\n    remaining -= block;\n\n    const crushing = Math.min(this.normalize(crushingChance), remaining);\n    remaining -= crushing;\n\n    const crit = Math.min(this.normalize(critChance), remaining);\n    remaining -= crit;\n\n    const hit = remaining;\n\n    const overHitCap = this.normalize(missChance * -1);\n    const overCritCap = this.normalize(critChance - crit);\n    const overall = +hit + (2.0 * crit) + (crushing * 1.5) + (block * 0.9);\n\n    return {\n      hitChance: hit.toFixed(2),\n      critChance: crit.toFixed(2),\n      dodgeChance: dodge.toFixed(2),\n      missChance: miss.toFixed(2),\n      parryChance: parry.toFixed(2),\n      blockChance: block.toFixed(2),\n      crushingChance: crushing.toFixed(2),\n      overHitCap: overHitCap.toFixed(2),\n      overCritCap: overCritCap.toFixed(2),\n      overall: overall.toFixed(2),\n      pieChart: [\n        { name: 'Miss', value: miss },\n        { name: 'Dodge', value: dodge },\n        { name: 'Parry', value: parry },\n        { name: 'Block', value: block },\n        { name: 'Crushing', value: crushing },\n        { name: 'Crit', value: crit },\n        { name: 'Hit', value: hit },\n      ],\n    }\n  }\n\n  computeDefenseTables() {\n    return {\n      auto: this.computeDefenseTable(this.computeChances('auto')),\n      special: this.computeDefenseTable(this.computeChances('special')),\n    };\n  };\n\n  render() {\n    return (\n      <DefenseTableView\n        formValues={ this.props.formValues }\n        defenseTables={ this.computeDefenseTables() }\n      />\n    );\n  }\n}\n\nDefenseTableContainer.defaultProps = {\n  formValues: {},\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('DefenseTableContainer')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nDefenseTableContainer.propTypes = propTypes;\n\nexport default reduxForm({ form: 'DefenseTableContainer' })(connect(mapStateToProps, mapDispatchToProps)(DefenseTableContainer));\n","import React, { Component }  from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AboutPage from './pages/about/AboutPage';\nimport HomePage from './pages/home/HomePage';\nimport GearPage from './pages/gear/GearPage';\nimport WeaponPage from './pages/weapon/WeaponPage';\nimport SpellContainer from './pages/spells/SpellContainer';\nimport HealingTouch from './pages/spells/HealingTouch';\nimport Rejuvenation from './pages/spells/Rejuvenation';\nimport Regrowth from './pages/spells/Regrowth';\nimport Lifebloom from './pages/spells/Lifebloom';\nimport GreaterHeal from './pages/spells/GreaterHeal';\nimport FlashHeal from './pages/spells/FlashHeal';\nimport Renew from './pages/spells/Renew';\nimport FlashOfLight from './pages/spells/FlashOfLight';\nimport HolyLight from './pages/spells/HolyLight';\nimport HolyNova from './pages/spells/HolyNova';\nimport Heal from './pages/spells/Heal';\nimport PrayerOfHealing from './pages/spells/PrayerOfHealing';\nimport LesserHealingWave from './pages/spells/LesserHealingWave';\nimport HealingWave from './pages/spells/HealingWave';\nimport ChainHeal from './pages/spells/ChainHeal';\n// import ShadowBolt from './pages/spells/ShadowBolt';\nimport NotFoundPage from './pages/not-found/NotFoundPage';\nimport ResistancesContainer from './pages/resistances/ResistancesContainer';\nimport ArmorContainer from './pages/armor/ArmorContainer';\nimport RegenContainer from './pages/regen/RegenContainer';\nimport AttackTableContainer from './pages/attackTable/AttackTableContainer';\nimport DefenseTableContainer from './pages/defenseTable/DefenseTableContainer';\nimport Analytics from 'react-router-ga';\n\nconst publicPath = '/';\n\nclass Routes extends Component {\n    render() {\n      return (\n        <HashRouter>\n          <Analytics id=\"UA-106746928-1\" debug>\n            <Switch>\n                <Route exact path={ publicPath } component={ HomePage } />\n                <Route exact path=\"/home\" component={ HomePage } />\n                <Route exact path=\"/resistances\" component={ ResistancesContainer } />\n                <Route exact path=\"/armor\" component={ ArmorContainer } />\n                <Route exact path=\"/regen\" component={ RegenContainer } />\n                <Route exact path=\"/gear\" component={ GearPage } />\n                <Route exact path=\"/weapon\" component={ WeaponPage } />\n                <Route exact path=\"/attack\" component={ AttackTableContainer } />\n                <Route exact path=\"/defense\" component={ DefenseTableContainer } />\n                <Route path=\"/spell\" component={ SpellContainer } />\n                <Route path=\"/healing-touch\" component={ HealingTouch } />\n                <Route path=\"/rejuvenation\" component={ Rejuvenation } />\n                <Route path=\"/regrowth\" component={ Regrowth } />\n                <Route path=\"/lifebloom\" component={ Lifebloom } />\n                <Route path=\"/greater-heal\" component={ GreaterHeal } />\n                <Route path=\"/flash-heal\" component={ FlashHeal } />\n                <Route path=\"/renew\" component={ Renew } />\n                <Route path=\"/flash-of-light\" component={ FlashOfLight } />\n                <Route path=\"/holy-light\" component={ HolyLight } />\n                <Route path=\"/heal\" component={ Heal } />\n                <Route path=\"/holy-nova\" component={ HolyNova } />\n                <Route path=\"/prayer-of-healing\" component={ PrayerOfHealing } />\n                <Route path=\"/lesser-healing-wave\" component={ LesserHealingWave } />\n                <Route path=\"/healing-wave\" component={ HealingWave } />\n                <Route path=\"/chain-heal\" component={ ChainHeal } />\n                {/* <Route path=\"/shadow-bolt\" component={ ShadowBolt } /> */}\n\n                <Route exact path=\"/about\" component={ AboutPage } />\n                <Route path='*' component={ NotFoundPage } />\n            </Switch >\n          </Analytics>\n        </HashRouter>\n      );\n    }\n  }\n  \n  export default Routes;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport './foundation.min.css';\nimport Routes from './routes';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n);\n\nReactDOM.render(\n    <Provider store={ store }>\n      <Routes />\n    </Provider>,\n    document.getElementById('root')\n);\n  \nregisterServiceWorker();\n"],"sourceRoot":""}