{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Documents\\\\GitHub\\\\tbc-sim\\\\src\\\\pages\\\\spells\\\\Rejuvenation.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass rejuvenation extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      healing: 1000,\n      crit: 10,\n      spirit: 284,\n      improvedRejuvenation: true,\n      empoweredRejuvenation: true,\n      tranquilSpirit: false,\n      giftOfNature: true,\n      treeOfLifeForm: false,\n      treeOfLifeAura: false\n    });\n  }\n\n  render() {\n    return React.createElement(HealingContainer, {\n      spell: spells.rejuvenation,\n      talents: [talents.improvedRejuvenation, talents.giftOfNature, talents.moonglow, talents.amplifyMagic, talents.t2Druid8set, talents.t3Druid4set, talents.empoweredRejuvenation, talents.treeOfLifeForm, talents.treeOfLifeAura],\n      formValues: this.props.formValues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('rejuvenation')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({}, dispatch)\n});\n\nrejuvenation.propTypes = propTypes;\nexport default reduxForm({\n  form: 'rejuvenation'\n})(connect(mapStateToProps, mapDispatchToProps)(rejuvenation));","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Documents\\GitHub\\tbc-sim\\src\\pages\\spells\\Rejuvenation.jsx"],"names":["React","Component","bindActionCreators","connect","reduxForm","propTypes","getFormValues","HealingContainer","talents","spells","rejuvenation","componentWillMount","props","initialize","healing","crit","spirit","improvedRejuvenation","empoweredRejuvenation","tranquilSpirit","giftOfNature","treeOfLifeForm","treeOfLifeAura","render","moonglow","amplifyMagic","t2Druid8set","t3Druid4set","formValues","mapStateToProps","state","mapDispatchToProps","dispatch","actions","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,QAAoD,YAApD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,cAAP;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAEnCU,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWC,UAAX,CAAsB;AACpBC,MAAAA,OAAO,EAAE,IADW;AAEpBC,MAAAA,IAAI,EAAE,EAFc;AAGpBC,MAAAA,MAAM,EAAE,GAHY;AAIpBC,MAAAA,oBAAoB,EAAE,IAJF;AAKpBC,MAAAA,qBAAqB,EAAE,IALH;AAMpBC,MAAAA,cAAc,EAAE,KANI;AAOpBC,MAAAA,YAAY,EAAE,IAPM;AAQpBC,MAAAA,cAAc,EAAE,KARI;AASpBC,MAAAA,cAAc,EAAE;AATI,KAAtB;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAGd,MAAM,CAACC,YADjB;AAEE,MAAA,OAAO,EAAG,CACRF,OAAO,CAACS,oBADA,EAERT,OAAO,CAACY,YAFA,EAGRZ,OAAO,CAACgB,QAHA,EAIRhB,OAAO,CAACiB,YAJA,EAKRjB,OAAO,CAACkB,WALA,EAMRlB,OAAO,CAACmB,WANA,EAORnB,OAAO,CAACU,qBAPA,EAQRV,OAAO,CAACa,cARA,EASRb,OAAO,CAACc,cATA,CAFZ;AAaE,MAAA,UAAU,EAAG,KAAKV,KAAL,CAAWgB,UAb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AAlCkC;;AAqCrC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,UAAU,EAAEtB,aAAa,CAAC,cAAD,CAAb,CAA8BwB,KAA9B;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,OAAO,EAAE/B,kBAAkB,CAAC,EAAD,EACxB8B,QADwB;AADW,CAAL,CAAnC;;AAKAtB,YAAY,CAACL,SAAb,GAAyBA,SAAzB;AAEA,eAAeD,SAAS,CAAC;AAAE8B,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAAoC/B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,YAA7C,CAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport HealingContainer from './HealingContainer';\r\nimport * as talents from './talents';\r\nimport * as spells from './spells';\r\nimport '../style.css';\r\n\r\nclass rejuvenation extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      healing: 1000,\r\n      crit: 10,\r\n      spirit: 284,\r\n      improvedRejuvenation: true,\r\n      empoweredRejuvenation: true,\r\n      tranquilSpirit: false,\r\n      giftOfNature: true,\r\n      treeOfLifeForm: false,\r\n      treeOfLifeAura: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HealingContainer\r\n        spell={ spells.rejuvenation }\r\n        talents={ [\r\n          talents.improvedRejuvenation,\r\n          talents.giftOfNature,\r\n          talents.moonglow,\r\n          talents.amplifyMagic,\r\n          talents.t2Druid8set,\r\n          talents.t3Druid4set,\r\n          talents.empoweredRejuvenation,\r\n          talents.treeOfLifeForm,\r\n          talents.treeOfLifeAura,\r\n        ] }\r\n        formValues={ this.props.formValues }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('rejuvenation')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nrejuvenation.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'rejuvenation' })(connect(mapStateToProps, mapDispatchToProps)(rejuvenation));\r\n"]},"metadata":{},"sourceType":"module"}