{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Documents\\\\GitHub\\\\tbc-sim\\\\src\\\\pages\\\\regen\\\\RegenContainer.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport RegenView from './RegenView';\n\nclass RegenContainer extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      class: 'druid',\n      intellect: 200,\n      spirit: 200,\n      combatManaRegen: 30\n    });\n  }\n\n  computeRegen() {\n    const intellect = +this.props.formValues.intellect;\n    const spirit = +this.props.formValues.spirit;\n    const combatManaRegen = +this.props.formValues.combatManaRegen; // math\n    //Formulas for mana regeneration based on spirit:\n\n    let formula = undefined;\n\n    switch (this.props.formValues.class) {\n      case 'priest':\n      case 'mage':\n        formula = (intellect, spirit) => 13 + spirit / 4;\n\n        break;\n\n      case 'druid':\n        formula = (intellect, spirit) => 5 * 0.00932715221261 * Math.sqrt(intellect) * spirit;\n\n        break;\n\n      case 'shaman':\n      case 'paladin':\n      case 'hunter':\n        formula = (intellect, spirit) => 15 + spirit / 5;\n\n        break;\n\n      case 'warlock':\n        formula = (intellect, spirit) => 8 + spirit / 4;\n\n        break;\n\n      default:\n        formula = (intellect, spirit) => 0;\n\n        break;\n    }\n\n    const manaPerTick = formula(intellect, spirit);\n    const outOfCombat = manaPerTick * 1;\n    const innervate = 20 * (5 - combatManaRegen * .01) * 0.00932715221261 * Math.sqrt(intellect) * spirit;\n    return {\n      outOfCombat: outOfCombat.toFixed(2),\n      inCombat: (outOfCombat * (combatManaRegen / 100)).toFixed(2),\n      innervate: innervate.toFixed(2)\n    };\n  }\n\n  render() {\n    return React.createElement(RegenView, {\n      formValues: this.props.formValues,\n      regen: this.computeRegen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}\n\nRegenContainer.defaultProps = {\n  formValues: {}\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('RegenContainer')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({}, dispatch)\n});\n\nRegenContainer.propTypes = propTypes;\nexport default reduxForm({\n  form: 'RegenContainer'\n})(connect(mapStateToProps, mapDispatchToProps)(RegenContainer));","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Documents\\GitHub\\tbc-sim\\src\\pages\\regen\\RegenContainer.jsx"],"names":["React","Component","bindActionCreators","connect","reduxForm","propTypes","getFormValues","RegenView","RegenContainer","componentWillMount","props","initialize","class","intellect","spirit","combatManaRegen","computeRegen","formValues","formula","undefined","Math","sqrt","manaPerTick","outOfCombat","innervate","toFixed","inCombat","render","defaultProps","mapStateToProps","state","mapDispatchToProps","dispatch","actions","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\r\nimport RegenView from './RegenView';\r\n\r\nclass RegenContainer extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.initialize({\r\n      class: 'druid',\r\n      intellect: 200,\r\n      spirit: 200,\r\n      combatManaRegen: 30,\r\n    });\r\n  }\r\n\r\n  computeRegen() {\r\n    const intellect = +this.props.formValues.intellect;\r\n    const spirit = +this.props.formValues.spirit;\r\n    const combatManaRegen = +this.props.formValues.combatManaRegen;\r\n\r\n    // math\r\n    //Formulas for mana regeneration based on spirit:\r\n    let formula = undefined;\r\n    switch (this.props.formValues.class) {\r\n      case 'priest':\r\n      case 'mage':\r\n        formula = (intellect, spirit) => 13 + (spirit / 4);\r\n        break;\r\n      case 'druid':\r\n        formula = (intellect, spirit) => (5 * 0.00932715221261 * Math.sqrt(intellect) * spirit);\r\n        break;\r\n      case 'shaman':\r\n      case 'paladin':\r\n      case 'hunter':\r\n        formula = (intellect, spirit) => 15 + (spirit / 5);\r\n        break;\r\n      case 'warlock':\r\n        formula = (intellect, spirit) => 8 + (spirit / 4);\r\n        break;\r\n      default:\r\n        formula = (intellect, spirit) => 0;\r\n        break;\r\n    }\r\n\r\n    const manaPerTick = formula(intellect, spirit);\r\n    const outOfCombat = manaPerTick * 1;\r\n    const innervate = 20 * (5-combatManaRegen*.01) * 0.00932715221261 * Math.sqrt(intellect) * spirit\r\n\r\n    return {\r\n      outOfCombat: (outOfCombat).toFixed(2),\r\n      inCombat: (outOfCombat * (combatManaRegen / 100)).toFixed(2),\r\n      innervate: (innervate).toFixed(2),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <RegenView\r\n        formValues={ this.props.formValues }\r\n        regen={ this.computeRegen() }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nRegenContainer.defaultProps = {\r\n  formValues: {},\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: getFormValues('RegenContainer')(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({\r\n  }, dispatch),\r\n});\r\n\r\nRegenContainer.propTypes = propTypes;\r\n\r\nexport default reduxForm({ form: 'RegenContainer' })(connect(mapStateToProps, mapDispatchToProps)(RegenContainer));\r\n"]},"metadata":{},"sourceType":"module"}