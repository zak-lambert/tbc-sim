{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Documents\\\\GitHub\\\\tbc-sim\\\\src\\\\pages\\\\spells\\\\HealingContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\nimport _ from 'lodash';\nimport HealingView from './HealingView';\nimport '../style.css';\n\nclass HealingContainer extends Component {\n  applyTalents({\n    spell,\n    rank,\n    character,\n    target\n  }, talents) {\n    const modifiedSpell = Object.assign({}, spell);\n    const modifiedRank = Object.assign({}, rank);\n    const modifiedCharacter = Object.assign({}, character);\n    const modifiedTarget = Object.assign({}, target);\n\n    _.forOwn(talents, value => {\n      if (spell.name === \"Lifebloom\") {\n        console.log(\"SFSDF:SLKFJS:LDFS:LKDJF:LKDSJF:LKJ\");\n      } // console.log(\"HEREERE3333333333333333RERE \" + spell.name)\n\n\n      if (character[value.field]) {\n        value.effect({\n          spell,\n          rank,\n          modifiedSpell: modifiedSpell,\n          modifiedRank: modifiedRank,\n          character: modifiedCharacter,\n          target: modifiedTarget\n        });\n      }\n    }); // console.log(\"HEREERERERE \" + spell.name)\n\n\n    return {\n      modifiedSpell,\n      modifiedRank,\n      modifiedCharacter,\n      modifiedTarget,\n      spell,\n      rank,\n      character,\n      target\n    };\n  }\n\n  applyTalentsh({\n    spell,\n    rank,\n    character,\n    target\n  }, talentsh) {\n    const modifiedSpell = Object.assign({}, spell);\n    const modifiedRank = Object.assign({}, rank);\n    const modifiedCharacter = Object.assign({}, character);\n    const modifiedTarget = Object.assign({}, target);\n\n    _.forOwn(talentsh, value => {\n      if (spell.name === \"Lifebloom\") {\n        console.log(\"SFSDF:SLKFJS:LDFS:LKDJF333333333333333333333333333333333333333333333333333333333:LKDSJF:LKJ\");\n      } // console.log(\"HEREERE3333333333333333RERE \" + spell.name)\n\n\n      if (character[value.field]) {\n        value.effect({\n          spell,\n          rank,\n          modifiedSpell: modifiedSpell,\n          modifiedRank: modifiedRank,\n          character: modifiedCharacter,\n          target: modifiedTarget\n        });\n      }\n    }); // console.log(\"HEREERERERE \" + spell.name)\n\n\n    return {\n      modifiedSpell,\n      modifiedRank,\n      modifiedCharacter,\n      modifiedTarget,\n      spell,\n      rank,\n      character,\n      target\n    };\n  }\n\n  computeSpellDetails({\n    modifiedSpell,\n    modifiedRank,\n    modifiedCharacter,\n    target,\n    spell,\n    rank\n  }) {\n    const lowLevelPenalty = 1 - (20 - Math.min(rank.level, 20)) * 0.0375;\n    const coefficient = Math.min(rank.castTime, 3.5) / 3.5 * lowLevelPenalty;\n    const directCoefficient = spell.coefficient ? modifiedSpell.coefficient * modifiedSpell.bonusDirect * lowLevelPenalty : coefficient * modifiedSpell.bonusDirect;\n    const hotCoefficient = spell.hotCoefficient ? modifiedSpell.hotCoefficient * modifiedSpell.bonusHotCo * lowLevelPenalty : Math.min((modifiedRank.duration || 15) / 15, 1) * lowLevelPenalty * modifiedSpell.bonusHotCo;\n    const totalCrit = Math.min(+modifiedCharacter.crit, 100);\n    const mana = modifiedRank.mana;\n    const castTime = Math.max(modifiedRank.castTime, 1.5);\n    const numberOfTicks = modifiedRank.duration / 3.0;\n    const modifiedNumberOfTicks = modifiedRank.duration / 3.0;\n    const bonusHot = modifiedSpell.hot ? hotCoefficient * +modifiedCharacter.healing : 0.0;\n    const baseHotTick = modifiedRank.hotTick || 0;\n    const bonusHotTick = bonusHot / numberOfTicks;\n    const totalBaseHot = baseHotTick * modifiedNumberOfTicks;\n    const totalBonusHot = bonusHotTick * modifiedNumberOfTicks;\n    const totalHot = totalBaseHot + totalBonusHot || 0.0;\n    const hotTick = totalHot / modifiedNumberOfTicks;\n    const baseAverage = ((modifiedRank.min || 0) + (modifiedRank.max || 0)) / 2;\n    const bonusHeal = modifiedSpell.direct ? directCoefficient * +modifiedCharacter.healing : 0.0;\n    const averageCritBonus = (baseAverage + bonusHeal) / 2 * (totalCrit / 100);\n    const totalDirect = baseAverage + bonusHeal + averageCritBonus;\n    const totalAverage = totalDirect + totalHot;\n    const manaEfficiency = totalAverage / mana;\n    const healingPerSecond = totalAverage / castTime;\n    const manaPerSecond = 5 * mana * (1 / castTime);\n    const rating = (healingPerSecond / 10 + manaEfficiency * 10) * 20;\n    return {\n      rank: rank.rank,\n      rankDescription: \"Rank \".concat(rank.rank),\n      mana: mana.toFixed(2),\n      mp5: manaPerSecond.toFixed(2),\n      castTime,\n      base: baseAverage.toFixed(2),\n      hot: totalBaseHot,\n      hotTick,\n      bonus: bonusHeal.toFixed(2),\n      bonusHot: totalBonusHot,\n      crit: averageCritBonus.toFixed(2),\n      total: totalAverage.toFixed(2),\n      hps: healingPerSecond.toFixed(2),\n      efficiency: +manaEfficiency.toFixed(2),\n      rating,\n      coefficient\n    };\n  }\n\n  generateHealingTable(formValues = {}) {\n    return _.map(this.props.spell.ranks, rank => {\n      return this.computeSpellDetails(this.applyTalents({\n        spell: this.props.spell,\n        rank,\n        character: formValues,\n        target: {}\n      }, this.props.talents), this.applyTalentsHidden({\n        spell: this.props.spell,\n        rank,\n        character: formValues,\n        target: {}\n      }, this.props.talentsh));\n    });\n  }\n\n  render() {\n    const _this$applyTalentsh = this.applyTalentsh({\n      spell: this.props.spell,\n      rank: this.props.spell.ranks[0],\n      character: this.props.formValues || {},\n      target: {}\n    }, this.props.talentsh),\n          modifiedSpell = _this$applyTalentsh.modifiedSpell;\n\n    return React.createElement(HealingView, {\n      spellName: modifiedSpell.name,\n      spell: modifiedSpell,\n      healingTable: this.generateHealingTable(this.props.formValues),\n      talents: this.props.talentsh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Character\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"healing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Healing\", React.createElement(Field, {\n      name: \"healing\",\n      component: \"input\",\n      type: \"number\",\n      min: \"0\",\n      max: \"9999\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"crit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Crit %\", React.createElement(Field, {\n      name: \"crit\",\n      component: \"input\",\n      type: \"number\",\n      min: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"spirit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Spirit\", React.createElement(Field, {\n      name: \"spirit\",\n      component: \"input\",\n      type: \"number\",\n      min: \"0\",\n      max: \"999\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect()(HealingContainer);","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Documents\\GitHub\\tbc-sim\\src\\pages\\spells\\HealingContainer.jsx"],"names":["React","Component","connect","Field","_","HealingView","HealingContainer","applyTalents","spell","rank","character","target","talents","modifiedSpell","Object","assign","modifiedRank","modifiedCharacter","modifiedTarget","forOwn","value","name","console","log","field","effect","applyTalentsh","talentsh","computeSpellDetails","lowLevelPenalty","Math","min","level","coefficient","castTime","directCoefficient","bonusDirect","hotCoefficient","bonusHotCo","duration","totalCrit","crit","mana","max","numberOfTicks","modifiedNumberOfTicks","bonusHot","hot","healing","baseHotTick","hotTick","bonusHotTick","totalBaseHot","totalBonusHot","totalHot","baseAverage","bonusHeal","direct","averageCritBonus","totalDirect","totalAverage","manaEfficiency","healingPerSecond","manaPerSecond","rating","rankDescription","toFixed","mp5","base","bonus","total","hps","efficiency","generateHealingTable","formValues","map","props","ranks","applyTalentsHidden","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\nimport _ from 'lodash';\r\nimport HealingView from './HealingView';\r\nimport '../style.css';\r\n\r\nclass HealingContainer extends Component {\r\n\r\n  applyTalents({ spell, rank, character, target }, talents) {\r\n    const modifiedSpell = Object.assign({}, spell);\r\n    const modifiedRank = Object.assign({}, rank);\r\n    const modifiedCharacter = Object.assign({}, character);\r\n    const modifiedTarget = Object.assign({}, target);\r\n\r\n    _.forOwn(talents, (value) => {\r\n      if (spell.name ===\"Lifebloom\"){\r\n        console.log(\"SFSDF:SLKFJS:LDFS:LKDJF:LKDSJF:LKJ\")\r\n\r\n      }\r\n      // console.log(\"HEREERE3333333333333333RERE \" + spell.name)\r\n      if (character[value.field]) {\r\n        value.effect({\r\n          spell,\r\n          rank,\r\n          modifiedSpell: modifiedSpell,\r\n          modifiedRank: modifiedRank,\r\n          character: modifiedCharacter,\r\n          target: modifiedTarget,\r\n        });\r\n      }\r\n    });\r\n    // console.log(\"HEREERERERE \" + spell.name)\r\n    return {\r\n      modifiedSpell,\r\n      modifiedRank,\r\n      modifiedCharacter,\r\n      modifiedTarget,\r\n      spell,\r\n      rank,\r\n      character,\r\n      target,\r\n    };\r\n  }\r\n\r\n  applyTalentsh({ spell, rank, character, target }, talentsh) {\r\n    const modifiedSpell = Object.assign({}, spell);\r\n    const modifiedRank = Object.assign({}, rank);\r\n    const modifiedCharacter = Object.assign({}, character);\r\n    const modifiedTarget = Object.assign({}, target);\r\n\r\n    _.forOwn(talentsh, (value) => {\r\n      if (spell.name ===\"Lifebloom\"){\r\n        console.log(\"SFSDF:SLKFJS:LDFS:LKDJF333333333333333333333333333333333333333333333333333333333:LKDSJF:LKJ\")\r\n        \r\n      }\r\n      // console.log(\"HEREERE3333333333333333RERE \" + spell.name)\r\n      if (character[value.field]) {\r\n        value.effect({\r\n          spell,\r\n          rank,\r\n          modifiedSpell: modifiedSpell,\r\n          modifiedRank: modifiedRank,\r\n          character: modifiedCharacter,\r\n          target: modifiedTarget,\r\n        });\r\n      }\r\n    });\r\n    // console.log(\"HEREERERERE \" + spell.name)\r\n    return {\r\n      modifiedSpell,\r\n      modifiedRank,\r\n      modifiedCharacter,\r\n      modifiedTarget,\r\n      spell,\r\n      rank,\r\n      character,\r\n      target,\r\n    };\r\n  }\r\n\r\n  computeSpellDetails({ modifiedSpell, modifiedRank, modifiedCharacter, target, spell, rank }) {\r\n\r\n    const lowLevelPenalty = (1 - ((20 - Math.min(rank.level, 20)) * 0.0375));\r\n    const coefficient = ((Math.min(rank.castTime, 3.5) / 3.5) * lowLevelPenalty);\r\n    const directCoefficient = spell.coefficient ? (modifiedSpell.coefficient * modifiedSpell.bonusDirect * lowLevelPenalty) : coefficient * modifiedSpell.bonusDirect;\r\n    const hotCoefficient = spell.hotCoefficient ? (modifiedSpell.hotCoefficient * modifiedSpell.bonusHotCo * lowLevelPenalty) : Math.min(((modifiedRank.duration || 15) / 15), 1) * lowLevelPenalty * modifiedSpell.bonusHotCo;\r\n\r\n    const totalCrit = Math.min(+modifiedCharacter.crit, 100);\r\n\r\n    const mana = modifiedRank.mana;\r\n    const castTime = Math.max(modifiedRank.castTime, 1.5);\r\n    const numberOfTicks = modifiedRank.duration / 3.0;\r\n    const modifiedNumberOfTicks = modifiedRank.duration / 3.0;\r\n    const bonusHot = modifiedSpell.hot ? hotCoefficient * +modifiedCharacter.healing : 0.0;\r\n    const baseHotTick  = (modifiedRank.hotTick || 0);\r\n    const bonusHotTick = (bonusHot / numberOfTicks);\r\n    const totalBaseHot = baseHotTick * modifiedNumberOfTicks;\r\n    const totalBonusHot = bonusHotTick * modifiedNumberOfTicks;\r\n    const totalHot = totalBaseHot + totalBonusHot || 0.0;\r\n    const hotTick = totalHot / modifiedNumberOfTicks;\r\n    const baseAverage = ((modifiedRank.min || 0) + (modifiedRank.max || 0)) / 2;\r\n    const bonusHeal = modifiedSpell.direct ? directCoefficient * +modifiedCharacter.healing : 0.0;\r\n    const averageCritBonus = ((baseAverage + bonusHeal) / 2) * (totalCrit / 100);\r\n    const totalDirect = (baseAverage + bonusHeal + averageCritBonus);\r\n    const totalAverage = (totalDirect + totalHot);\r\n    const manaEfficiency = totalAverage / mana;\r\n    const healingPerSecond = totalAverage / castTime;\r\n    const manaPerSecond = 5 * mana * (1 / castTime);\r\n    const rating = ((healingPerSecond / 10) + (manaEfficiency * 10)) * 20;\r\n\r\n    return {\r\n      rank: rank.rank,\r\n      rankDescription: `Rank ${ rank.rank }`,\r\n      mana: mana.toFixed(2),\r\n      mp5: manaPerSecond.toFixed(2),\r\n      castTime,\r\n      base: baseAverage.toFixed(2),\r\n      hot: totalBaseHot,\r\n      hotTick,\r\n      bonus: bonusHeal.toFixed(2),\r\n      bonusHot: totalBonusHot,\r\n      crit: averageCritBonus.toFixed(2),\r\n      total: totalAverage.toFixed(2),\r\n      hps: healingPerSecond.toFixed(2),\r\n      efficiency: +(manaEfficiency).toFixed(2),\r\n      rating,\r\n      coefficient,\r\n    };\r\n  }\r\n\r\n  generateHealingTable(formValues = {}) {\r\n    return _.map(this.props.spell.ranks, rank => {\r\n      return this.computeSpellDetails(\r\n        \r\n        this.applyTalents({\r\n          spell: this.props.spell,\r\n          rank,\r\n          character: formValues,\r\n          target: {},\r\n        }, this.props.talents),\r\n\r\n        this.applyTalentsHidden({\r\n          spell: this.props.spell,\r\n          rank,\r\n          character: formValues,\r\n          target: {},\r\n        }, this.props.talentsh)\r\n        \r\n        );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { modifiedSpell } = this.applyTalentsh({\r\n      spell: this.props.spell,\r\n      rank: this.props.spell.ranks[0],\r\n      character: this.props.formValues || {},\r\n      target: {},\r\n    }, this.props.talentsh);\r\n    return (\r\n      <HealingView\r\n        spellName={ modifiedSpell.name }\r\n        spell={ modifiedSpell }\r\n        healingTable={ this.generateHealingTable(this.props.formValues) }\r\n        talents={ this.props.talentsh }\r\n      >\r\n        <h3>Character</h3>\r\n        <div className='row'>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='healing'>Healing\r\n              <Field name='healing' component='input' type='number' min='0' max='9999' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='crit'>Crit %\r\n              <Field name='crit' component='input' type='number' min='0' max='100' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns'>\r\n            <label htmlFor='spirit'>Spirit\r\n              <Field name='spirit' component='input' type='number' min='0' max='999' />\r\n            </label>\r\n          </div>\r\n          <div className='large-4 columns' />\r\n        </div>\r\n      </HealingView>\r\n    );\r\n  }\r\n}\r\nexport default connect()(HealingContainer);\r\n"]},"metadata":{},"sourceType":"module"}