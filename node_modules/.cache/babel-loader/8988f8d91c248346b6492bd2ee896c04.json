{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Documents\\\\GitHub\\\\tbc-sim\\\\src\\\\pages\\\\spells\\\\Lifebloom.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass lifebloom extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      healing: 1000,\n      crit: 10,\n      int: 500,\n      spirit: 500,\n      lifebloomHoT: true,\n      lifebloomStacks: true,\n      // improvedRejuvenation: true,\n      // tranquilSpirit: true,\n      giftOfNature: true // empoweredRejuvenation: true,\n      // treeOfLifeForm: true,\n      // treeOfLifeAura: true,\n\n    });\n  }\n\n  render() {\n    return React.createElement(HealingContainer, {\n      spell: spells.lifebloom,\n      talents: [// talents.bloomTest,\n      // talents.bloomTest2,\n      // talents.improvedRejuvenation,\n      talents.giftOfNature, talents.treeOfLifeForm, // talents.treeOfLifeAura,\n      talents.moonglow, talents.amplifyMagic, // talents.t2Druid8set,\n      talents.t3Druid4set, talents.idolOfTheEmeraldQueen, talents.empoweredRejuvenation, talents.lifebloomStacks, talents.lifebloomHoT],\n      talentsH: [// talents.bloomTest,\n        // talents.bloomTest2,\n      ],\n      formValues: this.props.formValues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('lifebloom')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({}, dispatch)\n});\n\nlifebloom.propTypes = propTypes;\nexport default reduxForm({\n  form: 'lifebloom'\n})(connect(mapStateToProps, mapDispatchToProps)(lifebloom));","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Documents\\GitHub\\tbc-sim\\src\\pages\\spells\\Lifebloom.jsx"],"names":["React","Component","bindActionCreators","connect","reduxForm","propTypes","getFormValues","HealingContainer","talents","spells","lifebloom","componentWillMount","props","initialize","healing","crit","int","spirit","lifebloomHoT","lifebloomStacks","giftOfNature","render","treeOfLifeForm","moonglow","amplifyMagic","t3Druid4set","idolOfTheEmeraldQueen","empoweredRejuvenation","formValues","mapStateToProps","state","mapDispatchToProps","dispatch","actions","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,QAAoD,YAApD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAEhCU,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWC,UAAX,CAAsB;AACpBC,MAAAA,OAAO,EAAE,IADW;AAEpBC,MAAAA,IAAI,EAAE,EAFc;AAGpBC,MAAAA,GAAG,EAAE,GAHe;AAIpBC,MAAAA,MAAM,EAAE,GAJY;AAKpBC,MAAAA,YAAY,EAAE,IALM;AAMpBC,MAAAA,eAAe,EAAE,IANG;AAOpB;AACA;AACAC,MAAAA,YAAY,EAAE,IATM,CAUpB;AACA;AACA;;AAZoB,KAAtB;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAGZ,MAAM,CAACC,SADjB;AAEE,MAAA,OAAO,EAAG,CACR;AACA;AACA;AACAF,MAAAA,OAAO,CAACY,YAJA,EAKRZ,OAAO,CAACc,cALA,EAMR;AACAd,MAAAA,OAAO,CAACe,QAPA,EAQRf,OAAO,CAACgB,YARA,EASR;AACAhB,MAAAA,OAAO,CAACiB,WAVA,EAWRjB,OAAO,CAACkB,qBAXA,EAYRlB,OAAO,CAACmB,qBAZA,EAaRnB,OAAO,CAACW,eAbA,EAcRX,OAAO,CAACU,YAdA,CAFZ;AAiBK,MAAA,QAAQ,EAAG,CACZ;AACA;AAFY,OAjBhB;AAqBE,MAAA,UAAU,EAAG,KAAKN,KAAL,CAAWgB,UArB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAyBD;;AA7C+B;;AAgDlC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,UAAU,EAAEtB,aAAa,CAAC,WAAD,CAAb,CAA2BwB,KAA3B;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,OAAO,EAAE/B,kBAAkB,CAAC,EAAD,EACxB8B,QADwB;AADW,CAAL,CAAnC;;AAKAtB,SAAS,CAACL,SAAV,GAAsBA,SAAtB;AAEA,eAAeD,SAAS,CAAC;AAAE8B,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAAiC/B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,SAA7C,CAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport HealingContainer from './HealingContainer';\nimport * as talents from './talents';\nimport * as spells from './spells';\nimport '../style.css';\n\nclass lifebloom extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      healing: 1000,\n      crit: 10,\n      int: 500,\n      spirit: 500,\n      lifebloomHoT: true,\n      lifebloomStacks: true,\n      // improvedRejuvenation: true,\n      // tranquilSpirit: true,\n      giftOfNature: true,\n      // empoweredRejuvenation: true,\n      // treeOfLifeForm: true,\n      // treeOfLifeAura: true,\n    });\n  }\n\n  render() {\n    return (\n      <HealingContainer\n        spell={ spells.lifebloom }\n        talents={ [\n          // talents.bloomTest,\n          // talents.bloomTest2,\n          // talents.improvedRejuvenation,\n          talents.giftOfNature,\n          talents.treeOfLifeForm,\n          // talents.treeOfLifeAura,\n          talents.moonglow,\n          talents.amplifyMagic,\n          // talents.t2Druid8set,\n          talents.t3Druid4set,\n          talents.idolOfTheEmeraldQueen,\n          talents.empoweredRejuvenation,\n          talents.lifebloomStacks,\n          talents.lifebloomHoT,\n        ] }talentsH={ [\n          // talents.bloomTest,\n          // talents.bloomTest2,\n        ] }\n        formValues={ this.props.formValues }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('lifebloom')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nlifebloom.propTypes = propTypes;\n\nexport default reduxForm({ form: 'lifebloom' })(connect(mapStateToProps, mapDispatchToProps)(lifebloom));\n"]},"metadata":{},"sourceType":"module"}