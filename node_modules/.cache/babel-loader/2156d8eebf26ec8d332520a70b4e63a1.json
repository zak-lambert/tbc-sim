{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Desktop\\\\tbc-sim-master (2)\\\\tbc-sim-master\\\\src\\\\pages\\\\regen\\\\RegenContainer.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport RegenView from './RegenView';\n\nclass RegenContainer extends Component {\n  componentWillMount() {\n    this.props.initialize({\n      class: 'druid',\n      intellect: 200,\n      spirit: 200,\n      combatManaRegen: 30\n    });\n  }\n\n  computeRegen() {\n    const intellect = +this.props.formValues.intellect;\n    const spirit = +this.props.formValues.spirit;\n    const combatManaRegen = +this.props.formValues.combatManaRegen; // math\n    //Formulas for mana regeneration based on spirit:\n\n    let formula = undefined;\n\n    switch (this.props.formValues.class) {\n      case 'priest':\n      case 'mage':\n        formula = (intellect, spirit) => 13 + spirit / 4;\n\n        break;\n\n      case 'druid':\n        formula = (intellect, spirit) => 588 * 0.00932715221261 * 20 * spirit;\n\n      case 'shaman':\n      case 'paladin':\n      case 'hunter':\n        formula = (intellect, spirit) => 15 + spirit / 5;\n\n        break;\n\n      case 'warlock':\n        formula = (intellect, spirit) => 8 + spirit / 4;\n\n        break;\n\n      default:\n        formula = (intellect, spirit) => 0;\n\n        break;\n    }\n\n    const manaPerTick = formula(intellect, spirit);\n    const outOfCombat = manaPerTick * 2.5;\n    return {\n      outOfCombat: outOfCombat.toFixed(2),\n      inCombat: (outOfCombat * (combatManaRegen / 100)).toFixed(2)\n    };\n  }\n\n  render() {\n    return React.createElement(RegenView, {\n      formValues: this.props.formValues,\n      regen: this.computeRegen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\nRegenContainer.defaultProps = {\n  formValues: {}\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('RegenContainer')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({}, dispatch)\n});\n\nRegenContainer.propTypes = propTypes;\nexport default reduxForm({\n  form: 'RegenContainer'\n})(connect(mapStateToProps, mapDispatchToProps)(RegenContainer));","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Desktop\\tbc-sim-master (2)\\tbc-sim-master\\src\\pages\\regen\\RegenContainer.jsx"],"names":["React","Component","bindActionCreators","connect","reduxForm","propTypes","getFormValues","RegenView","RegenContainer","componentWillMount","props","initialize","class","intellect","spirit","combatManaRegen","computeRegen","formValues","formula","undefined","manaPerTick","outOfCombat","toFixed","inCombat","render","defaultProps","mapStateToProps","state","mapDispatchToProps","dispatch","actions","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, propTypes, getFormValues } from 'redux-form';\nimport RegenView from './RegenView';\n\nclass RegenContainer extends Component {\n\n  componentWillMount() {\n    this.props.initialize({\n      class: 'druid',\n      intellect: 200,\n      spirit: 200,\n      combatManaRegen: 30,\n    });\n  }\n\n  computeRegen() {\n    const intellect = +this.props.formValues.intellect;\n    const spirit = +this.props.formValues.spirit;\n    const combatManaRegen = +this.props.formValues.combatManaRegen;\n\n    // math\n    //Formulas for mana regeneration based on spirit:\n    let formula = undefined;\n    switch (this.props.formValues.class) {\n      case 'priest':\n      case 'mage':\n        formula = (intellect, spirit) => 13 + (spirit / 4);\n        break;\n      case 'druid':\n        formula = (intellect, spirit) => (588 * 0.00932715221261 * 20 * spirit);\n      case 'shaman':\n      case 'paladin':\n      case 'hunter':\n        formula = (intellect, spirit) => 15 + (spirit / 5);\n        break;\n      case 'warlock':\n        formula = (intellect, spirit) => 8 + (spirit / 4);\n        break;\n      default:\n        formula = (intellect, spirit) => 0;\n        break;\n    }\n\n    const manaPerTick = formula(intellect, spirit);\n    const outOfCombat = manaPerTick * 2.5;\n\n    return {\n      outOfCombat: (outOfCombat).toFixed(2),\n      inCombat: (outOfCombat * (combatManaRegen / 100)).toFixed(2),\n    };\n  }\n\n  render() {\n    return (\n      <RegenView\n        formValues={ this.props.formValues }\n        regen={ this.computeRegen() }\n      />\n    );\n  }\n}\n\nRegenContainer.defaultProps = {\n  formValues: {},\n};\n\nconst mapStateToProps = state => {\n  return {\n    formValues: getFormValues('RegenContainer')(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({\n  }, dispatch),\n});\n\nRegenContainer.propTypes = propTypes;\n\nexport default reduxForm({ form: 'RegenContainer' })(connect(mapStateToProps, mapDispatchToProps)(RegenContainer));\n"]},"metadata":{},"sourceType":"module"}