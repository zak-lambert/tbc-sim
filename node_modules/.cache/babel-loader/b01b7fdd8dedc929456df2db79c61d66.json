{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zak Lambert\\\\Desktop\\\\tbc-sim-master (2)\\\\tbc-sim-master\\\\src\\\\pages\\\\spells\\\\CasterContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\nimport _ from 'lodash';\nimport CasterView from './CasterView';\nimport '../style.css';\n\nclass CasterContainer extends Component {\n  applyTalents({\n    spell,\n    rank,\n    character,\n    target\n  }, talents) {\n    const modifiedSpell = Object.assign({}, spell);\n    const modifiedRank = Object.assign({}, rank);\n    const modifiedCharacter = Object.assign({}, character);\n    const modifiedTarget = Object.assign({}, target);\n\n    _.forOwn(talents, value => {\n      if (character[value.field]) {\n        value.effect({\n          spell,\n          rank,\n          modifiedSpell: modifiedSpell,\n          modifiedRank: modifiedRank,\n          character: modifiedCharacter,\n          target: modifiedTarget\n        });\n      }\n    });\n\n    return {\n      modifiedSpell,\n      modifiedRank,\n      modifiedCharacter,\n      modifiedTarget,\n      spell,\n      rank,\n      character,\n      target\n    };\n  }\n\n  computeSpellDetails({\n    modifiedSpell,\n    modifiedRank,\n    modifiedCharacter,\n    target,\n    spell,\n    rank\n  }) {\n    const lowLevelPenalty = 1 - (20 - Math.min(rank.level, 20)) * 0.0375;\n    const coefficient = Math.min(rank.castTime, 3.5) / 3.5 * lowLevelPenalty;\n    const directCoefficient = spell.coefficient ? spell.coefficient * lowLevelPenalty : coefficient;\n    const dotCoefficient = spell.dotCoefficient ? spell.dotCoefficient * lowLevelPenalty : coefficient;\n    const totalCrit = Math.min(+modifiedCharacter.crit, 100);\n    const mana = modifiedRank.mana;\n    const castTime = Math.max(modifiedRank.castTime, 1.5);\n    const baseDot = modifiedRank.dot || 0;\n    const bonusDot = modifiedSpell.dot ? dotCoefficient * +modifiedCharacter.damage : 0.0;\n    const totalDot = baseDot + bonusDot;\n    const baseAverage = ((modifiedRank.min || 0) + (modifiedRank.max || 0)) / 2;\n    const bonusDamage = modifiedSpell.direct ? directCoefficient * +modifiedCharacter.damage : 0.0;\n    const averageCritBonus = (baseAverage + bonusDamage) * (modifiedSpell.critMultiplier || 0.5) * (totalCrit / 100);\n    const totalDirect = baseAverage + bonusDamage + averageCritBonus;\n    const totalAverage = totalDirect + totalDot;\n    const manaEfficiency = totalAverage / mana;\n    const damagePerSecond = totalAverage / castTime;\n    const manaPerSecond = 50 * mana / castTime;\n    const rating = (damagePerSecond / 10 + manaEfficiency * 10) * 20;\n    return {\n      rank: rank.rank,\n      rankDescription: \"Rank \".concat(rank.rank),\n      mana: mana.toFixed(0),\n      mps: manaPerSecond.toFixed(2),\n      castTime: castTime.toFixed(2),\n      base: baseAverage.toFixed(0),\n      dot: modifiedRank.dot.toFixed(0),\n      bonus: bonusDamage.toFixed(2),\n      bonusDot: bonusDot.toFixed(2),\n      crit: averageCritBonus.toFixed(2),\n      total: totalAverage.toFixed(2),\n      dps: damagePerSecond.toFixed(2),\n      efficiency: +manaEfficiency.toFixed(2),\n      rating\n    };\n  }\n\n  generateDamageTable(formValues = {}) {\n    return _.map(this.props.spell.ranks, rank => {\n      return this.computeSpellDetails(this.applyTalents({\n        spell: this.props.spell,\n        rank,\n        character: formValues,\n        target: {}\n      }, this.props.talents));\n    });\n  }\n\n  render() {\n    return React.createElement(CasterView, {\n      spellName: this.props.spell.name,\n      spell: this.props.spell,\n      damageTable: this.generateDamageTable(this.props.formValues),\n      talents: this.props.talents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Character\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"damage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"damage\", React.createElement(Field, {\n      name: \"damage\",\n      component: \"input\",\n      type: \"number\",\n      min: \"0\",\n      max: \"999\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"crit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Crit %\", React.createElement(Field, {\n      name: \"crit\",\n      component: \"input\",\n      type: \"number\",\n      min: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"large-4 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect()(CasterContainer);","map":{"version":3,"sources":["C:\\Users\\Zak Lambert\\Desktop\\tbc-sim-master (2)\\tbc-sim-master\\src\\pages\\spells\\CasterContainer.jsx"],"names":["React","Component","connect","Field","_","CasterView","CasterContainer","applyTalents","spell","rank","character","target","talents","modifiedSpell","Object","assign","modifiedRank","modifiedCharacter","modifiedTarget","forOwn","value","field","effect","computeSpellDetails","lowLevelPenalty","Math","min","level","coefficient","castTime","directCoefficient","dotCoefficient","totalCrit","crit","mana","max","baseDot","dot","bonusDot","damage","totalDot","baseAverage","bonusDamage","direct","averageCritBonus","critMultiplier","totalDirect","totalAverage","manaEfficiency","damagePerSecond","manaPerSecond","rating","rankDescription","toFixed","mps","base","bonus","total","dps","efficiency","generateDamageTable","formValues","map","props","ranks","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field } from 'redux-form';\nimport _ from 'lodash';\nimport CasterView from './CasterView';\nimport '../style.css';\n\nclass CasterContainer extends Component {\n\n  applyTalents({ spell, rank, character, target }, talents) {\n    const modifiedSpell = Object.assign({}, spell);\n    const modifiedRank = Object.assign({}, rank);\n    const modifiedCharacter = Object.assign({}, character);\n    const modifiedTarget = Object.assign({}, target);\n\n    _.forOwn(talents, (value) => {\n      if (character[value.field]) {\n        value.effect({\n          spell,\n          rank,\n          modifiedSpell: modifiedSpell,\n          modifiedRank: modifiedRank,\n          character: modifiedCharacter,\n          target: modifiedTarget,\n        });\n      }\n    });\n    return {\n      modifiedSpell,\n      modifiedRank,\n      modifiedCharacter,\n      modifiedTarget,\n      spell,\n      rank,\n      character,\n      target,\n    };\n  }\n\n  computeSpellDetails({ modifiedSpell, modifiedRank, modifiedCharacter, target, spell, rank }) {\n    const lowLevelPenalty = (1 - ((20 - Math.min(rank.level, 20)) * 0.0375));\n    const coefficient = (Math.min(rank.castTime, 3.5) / 3.5) * lowLevelPenalty;\n    const directCoefficient = spell.coefficient ? (spell.coefficient * lowLevelPenalty) : coefficient;\n    const dotCoefficient = spell.dotCoefficient ? (spell.dotCoefficient * lowLevelPenalty) : coefficient;\n\n    const totalCrit = Math.min(+modifiedCharacter.crit, 100);\n    const mana = modifiedRank.mana;\n    const castTime = Math.max(modifiedRank.castTime, 1.5);\n    const baseDot = (modifiedRank.dot || 0);\n    const bonusDot = modifiedSpell.dot ? dotCoefficient * +modifiedCharacter.damage : 0.0;\n    const totalDot = baseDot + bonusDot;\n    const baseAverage = ((modifiedRank.min || 0) + (modifiedRank.max || 0)) / 2;\n    const bonusDamage = modifiedSpell.direct ? directCoefficient * +modifiedCharacter.damage : 0.0;\n    const averageCritBonus = ((baseAverage + bonusDamage) * (modifiedSpell.critMultiplier || 0.5)) * (totalCrit / 100);\n    const totalDirect = (baseAverage + bonusDamage + averageCritBonus);\n    const totalAverage = (totalDirect + totalDot);\n    const manaEfficiency = totalAverage / mana;\n    const damagePerSecond = totalAverage / castTime;\n    const manaPerSecond = 50 * mana / castTime;\n    const rating = ((damagePerSecond / 10) + (manaEfficiency * 10)) * 20;\n\n    return {\n      rank: rank.rank,\n      rankDescription: `Rank ${ rank.rank }`,\n      mana: mana.toFixed(0),\n      mps: manaPerSecond.toFixed(2),\n      castTime: castTime.toFixed(2),\n      base: baseAverage.toFixed(0),\n      dot: modifiedRank.dot.toFixed(0),\n      bonus: bonusDamage.toFixed(2),\n      bonusDot: bonusDot.toFixed(2),\n      crit: averageCritBonus.toFixed(2),\n      total: totalAverage.toFixed(2),\n      dps: damagePerSecond.toFixed(2),\n      efficiency: +(manaEfficiency.toFixed(2)),\n      rating,\n    };\n  }\n\n  generateDamageTable(formValues = {}) {\n    return _.map(this.props.spell.ranks, rank => {\n      return this.computeSpellDetails(\n        this.applyTalents({\n          spell: this.props.spell,\n          rank,\n          character: formValues,\n          target: {},\n        }, this.props.talents));\n    });\n  }\n\n  render() {\n    return (\n      <CasterView\n        spellName={ this.props.spell.name }\n        spell={ this.props.spell }\n        damageTable={ this.generateDamageTable(this.props.formValues) }\n        talents={ this.props.talents }\n      >\n        <h3>Character</h3>\n        <div className='row'>\n          <div className='large-4 columns'>\n            <label htmlFor='damage'>damage\n              <Field name='damage' component='input' type='number' min='0' max='999' />\n            </label>\n          </div>\n          <div className='large-4 columns'>\n            <label htmlFor='crit'>Crit %\n              <Field name='crit' component='input' type='number' min='0' max='100' />\n            </label>\n          </div>\n          <div className='large-4 columns' />\n        </div>\n      </CasterView>\n    );\n  }\n}\nexport default connect()(CasterContainer);\n"]},"metadata":{},"sourceType":"module"}